syntax = "proto3";

package kos.sim;

import "google/protobuf/empty.proto";
import "kos/common.proto";

option go_package = "kos/sim;sim";
option java_package = "com.kos.sim";
option csharp_namespace = "KOS.Sim";

// Service to control the simulation environment.
service SimulationService {
    // Resets the simulation to its initial state.
    rpc Reset(ResetRequest) returns (kos.common.ActionResponse);

    // Pauses/unpauses the simulation.
    rpc SetPaused(SetPausedRequest) returns (kos.common.ActionResponse);

    // Steps the simulation forward by a specified amount.
    rpc Step(StepRequest) returns (kos.common.ActionResponse);

    // Sets various simulation parameters.
    rpc SetParameters(SetParametersRequest) returns (kos.common.ActionResponse);

    // Gets the current simulation parameters.
    rpc GetParameters(google.protobuf.Empty) returns (GetParametersResponse);
}

message StartingPosition {
    float x = 1;
    float y = 2;
    float z = 3;
}

message StartingQuaternion {
    float x = 1;
    float y = 2;
    float z = 3;
    float w = 4;
}

message JointValue {
    string name = 1;
    optional float pos = 2;
    optional float vel = 3;
}

message JointValues {
    repeated JointValue values = 1;
}

message ResetRequest {
    optional StartingPosition pos = 1;
    optional StartingQuaternion quat = 2;
    optional JointValues joints = 3;
}

message SetPausedRequest {
    bool paused = 1;
}

message StepRequest {
    uint32 num_steps = 1;
    optional float step_size = 2;
}

message SetParametersRequest {
    SimulationParameters parameters = 1;
}

message GetParametersResponse {
    SimulationParameters parameters = 1;
    kos.common.Error error = 2;  // Error details if any
}

message SimulationParameters {
    optional float time_scale = 1;
    optional float gravity = 2;
}
