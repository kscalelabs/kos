window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"pykos": {"fullname": "pykos", "modulename": "pykos", "kind": "module", "doc": "<p>KOS Python client.</p>\n"}, "pykos.client": {"fullname": "pykos.client", "modulename": "pykos.client", "kind": "module", "doc": "<p>KOS client.</p>\n"}, "pykos.client.KOS": {"fullname": "pykos.client.KOS", "modulename": "pykos.client", "qualname": "KOS", "kind": "class", "doc": "<p>KOS client.</p>\n\n<p>Args:\n    ip (str, optional): IP address of the robot running KOS. Defaults to localhost.\n    port (int, optional): Port of the robot running KOS. Defaults to 50051.</p>\n\n<p>Attributes:\n    imu (IMUServiceClient): Client for the IMU service.</p>\n"}, "pykos.client.KOS.__init__": {"fullname": "pykos.client.KOS.__init__", "modulename": "pykos.client", "qualname": "KOS.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ip</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;localhost&#39;</span>, </span><span class=\"param\"><span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">50051</span></span>)</span>"}, "pykos.client.KOS.ip": {"fullname": "pykos.client.KOS.ip", "modulename": "pykos.client", "qualname": "KOS.ip", "kind": "variable", "doc": "<p></p>\n"}, "pykos.client.KOS.port": {"fullname": "pykos.client.KOS.port", "modulename": "pykos.client", "qualname": "KOS.port", "kind": "variable", "doc": "<p></p>\n"}, "pykos.client.KOS.imu": {"fullname": "pykos.client.KOS.imu", "modulename": "pykos.client", "qualname": "KOS.imu", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pykos.services.imu.IMUServiceClient"}, "pykos.client.KOS.actuator": {"fullname": "pykos.client.KOS.actuator", "modulename": "pykos.client", "qualname": "KOS.actuator", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pykos.services.actuator.ActuatorServiceClient"}, "pykos.client.KOS.led_matrix": {"fullname": "pykos.client.KOS.led_matrix", "modulename": "pykos.client", "qualname": "KOS.led_matrix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pykos.services.led_matrix.LEDMatrixServiceClient"}, "pykos.client.KOS.sound": {"fullname": "pykos.client.KOS.sound", "modulename": "pykos.client", "qualname": "KOS.sound", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pykos.services.sound.SoundServiceClient"}, "pykos.client.KOS.process_manager": {"fullname": "pykos.client.KOS.process_manager", "modulename": "pykos.client", "qualname": "KOS.process_manager", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pykos.services.process_manager.ProcessManagerServiceClient"}, "pykos.client.KOS.inference": {"fullname": "pykos.client.KOS.inference", "modulename": "pykos.client", "qualname": "KOS.inference", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pykos.services.inference.InferenceServiceClient"}, "pykos.client.KOS.sim": {"fullname": "pykos.client.KOS.sim", "modulename": "pykos.client", "qualname": "KOS.sim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pykos.services.sim.SimServiceClient"}, "pykos.client.KOS.connect": {"fullname": "pykos.client.KOS.connect", "modulename": "pykos.client", "qualname": "KOS.connect", "kind": "function", "doc": "<p>Connect to the gRPC server and initialize service clients.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, "pykos.client.KOS.close": {"fullname": "pykos.client.KOS.close", "modulename": "pykos.client", "qualname": "KOS.close", "kind": "function", "doc": "<p>Close the gRPC channel.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, "pykos.services": {"fullname": "pykos.services", "modulename": "pykos.services", "kind": "module", "doc": "<p></p>\n"}, "pykos.services.actuator": {"fullname": "pykos.services.actuator", "modulename": "pykos.services.actuator", "kind": "module", "doc": "<p>Actuator service client.</p>\n"}, "pykos.services.actuator.ActuatorCommand": {"fullname": "pykos.services.actuator.ActuatorCommand", "modulename": "pykos.services.actuator", "qualname": "ActuatorCommand", "kind": "class", "doc": "<p></p>\n", "bases": "typing.TypedDict"}, "pykos.services.actuator.ActuatorCommand.actuator_id": {"fullname": "pykos.services.actuator.ActuatorCommand.actuator_id", "modulename": "pykos.services.actuator", "qualname": "ActuatorCommand.actuator_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pykos.services.actuator.ActuatorCommand.position": {"fullname": "pykos.services.actuator.ActuatorCommand.position", "modulename": "pykos.services.actuator", "qualname": "ActuatorCommand.position", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.actuator.ActuatorCommand.velocity": {"fullname": "pykos.services.actuator.ActuatorCommand.velocity", "modulename": "pykos.services.actuator", "qualname": "ActuatorCommand.velocity", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.actuator.ActuatorCommand.torque": {"fullname": "pykos.services.actuator.ActuatorCommand.torque", "modulename": "pykos.services.actuator", "qualname": "ActuatorCommand.torque", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.actuator.ConfigureActuatorRequest": {"fullname": "pykos.services.actuator.ConfigureActuatorRequest", "modulename": "pykos.services.actuator", "qualname": "ConfigureActuatorRequest", "kind": "class", "doc": "<p></p>\n", "bases": "typing.TypedDict"}, "pykos.services.actuator.ConfigureActuatorRequest.actuator_id": {"fullname": "pykos.services.actuator.ConfigureActuatorRequest.actuator_id", "modulename": "pykos.services.actuator", "qualname": "ConfigureActuatorRequest.actuator_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pykos.services.actuator.ConfigureActuatorRequest.kp": {"fullname": "pykos.services.actuator.ConfigureActuatorRequest.kp", "modulename": "pykos.services.actuator", "qualname": "ConfigureActuatorRequest.kp", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.actuator.ConfigureActuatorRequest.kd": {"fullname": "pykos.services.actuator.ConfigureActuatorRequest.kd", "modulename": "pykos.services.actuator", "qualname": "ConfigureActuatorRequest.kd", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.actuator.ConfigureActuatorRequest.ki": {"fullname": "pykos.services.actuator.ConfigureActuatorRequest.ki", "modulename": "pykos.services.actuator", "qualname": "ConfigureActuatorRequest.ki", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.actuator.ConfigureActuatorRequest.max_torque": {"fullname": "pykos.services.actuator.ConfigureActuatorRequest.max_torque", "modulename": "pykos.services.actuator", "qualname": "ConfigureActuatorRequest.max_torque", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.actuator.ConfigureActuatorRequest.protective_torque": {"fullname": "pykos.services.actuator.ConfigureActuatorRequest.protective_torque", "modulename": "pykos.services.actuator", "qualname": "ConfigureActuatorRequest.protective_torque", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.actuator.ConfigureActuatorRequest.protection_time": {"fullname": "pykos.services.actuator.ConfigureActuatorRequest.protection_time", "modulename": "pykos.services.actuator", "qualname": "ConfigureActuatorRequest.protection_time", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.actuator.ConfigureActuatorRequest.torque_enabled": {"fullname": "pykos.services.actuator.ConfigureActuatorRequest.torque_enabled", "modulename": "pykos.services.actuator", "qualname": "ConfigureActuatorRequest.torque_enabled", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[bool]"}, "pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"fullname": "pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id", "modulename": "pykos.services.actuator", "qualname": "ConfigureActuatorRequest.new_actuator_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[int]"}, "pykos.services.actuator.ConfigureActuatorRequest.zero_position": {"fullname": "pykos.services.actuator.ConfigureActuatorRequest.zero_position", "modulename": "pykos.services.actuator", "qualname": "ConfigureActuatorRequest.zero_position", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[bool]"}, "pykos.services.actuator.ActuatorStateRequest": {"fullname": "pykos.services.actuator.ActuatorStateRequest", "modulename": "pykos.services.actuator", "qualname": "ActuatorStateRequest", "kind": "class", "doc": "<p></p>\n", "bases": "typing.TypedDict"}, "pykos.services.actuator.ActuatorStateRequest.actuator_ids": {"fullname": "pykos.services.actuator.ActuatorStateRequest.actuator_ids", "modulename": "pykos.services.actuator", "qualname": "ActuatorStateRequest.actuator_ids", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[int]"}, "pykos.services.actuator.CalibrationStatus": {"fullname": "pykos.services.actuator.CalibrationStatus", "modulename": "pykos.services.actuator", "qualname": "CalibrationStatus", "kind": "class", "doc": "<p></p>\n"}, "pykos.services.actuator.CalibrationStatus.Calibrating": {"fullname": "pykos.services.actuator.CalibrationStatus.Calibrating", "modulename": "pykos.services.actuator", "qualname": "CalibrationStatus.Calibrating", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;calibrating&#x27;"}, "pykos.services.actuator.CalibrationStatus.Calibrated": {"fullname": "pykos.services.actuator.CalibrationStatus.Calibrated", "modulename": "pykos.services.actuator", "qualname": "CalibrationStatus.Calibrated", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;calibrated&#x27;"}, "pykos.services.actuator.CalibrationStatus.Timeout": {"fullname": "pykos.services.actuator.CalibrationStatus.Timeout", "modulename": "pykos.services.actuator", "qualname": "CalibrationStatus.Timeout", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;timeout&#x27;"}, "pykos.services.actuator.CalibrationMetadata": {"fullname": "pykos.services.actuator.CalibrationMetadata", "modulename": "pykos.services.actuator", "qualname": "CalibrationMetadata", "kind": "class", "doc": "<p></p>\n"}, "pykos.services.actuator.CalibrationMetadata.__init__": {"fullname": "pykos.services.actuator.CalibrationMetadata.__init__", "modulename": "pykos.services.actuator", "qualname": "CalibrationMetadata.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">metadata_any</span><span class=\"p\">:</span> <span class=\"n\">google</span><span class=\"o\">.</span><span class=\"n\">protobuf</span><span class=\"o\">.</span><span class=\"n\">any_pb2</span><span class=\"o\">.</span><span class=\"n\">Any</span></span>)</span>"}, "pykos.services.actuator.CalibrationMetadata.actuator_id": {"fullname": "pykos.services.actuator.CalibrationMetadata.actuator_id", "modulename": "pykos.services.actuator", "qualname": "CalibrationMetadata.actuator_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int | None"}, "pykos.services.actuator.CalibrationMetadata.status": {"fullname": "pykos.services.actuator.CalibrationMetadata.status", "modulename": "pykos.services.actuator", "qualname": "CalibrationMetadata.status", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None"}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"fullname": "pykos.services.actuator.CalibrationMetadata.decode_metadata", "modulename": "pykos.services.actuator", "qualname": "CalibrationMetadata.decode_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">metadata_any</span><span class=\"p\">:</span> <span class=\"n\">google</span><span class=\"o\">.</span><span class=\"n\">protobuf</span><span class=\"o\">.</span><span class=\"n\">any_pb2</span><span class=\"o\">.</span><span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pykos.services.actuator.ActuatorServiceClient": {"fullname": "pykos.services.actuator.ActuatorServiceClient", "modulename": "pykos.services.actuator", "qualname": "ActuatorServiceClient", "kind": "class", "doc": "<p></p>\n"}, "pykos.services.actuator.ActuatorServiceClient.__init__": {"fullname": "pykos.services.actuator.ActuatorServiceClient.__init__", "modulename": "pykos.services.actuator", "qualname": "ActuatorServiceClient.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">channel</span><span class=\"p\">:</span> <span class=\"n\">grpc</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">_base_channel</span><span class=\"o\">.</span><span class=\"n\">Channel</span></span>)</span>"}, "pykos.services.actuator.ActuatorServiceClient.stub": {"fullname": "pykos.services.actuator.ActuatorServiceClient.stub", "modulename": "pykos.services.actuator", "qualname": "ActuatorServiceClient.stub", "kind": "variable", "doc": "<p></p>\n"}, "pykos.services.actuator.ActuatorServiceClient.operations_stub": {"fullname": "pykos.services.actuator.ActuatorServiceClient.operations_stub", "modulename": "pykos.services.actuator", "qualname": "ActuatorServiceClient.operations_stub", "kind": "variable", "doc": "<p></p>\n"}, "pykos.services.actuator.ActuatorServiceClient.calibrate": {"fullname": "pykos.services.actuator.ActuatorServiceClient.calibrate", "modulename": "pykos.services.actuator", "qualname": "ActuatorServiceClient.calibrate", "kind": "function", "doc": "<p>Calibrate an actuator.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">actuator_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pykos</span><span class=\"o\">.</span><span class=\"n\">services</span><span class=\"o\">.</span><span class=\"n\">actuator</span><span class=\"o\">.</span><span class=\"n\">CalibrationMetadata</span>:</span></span>", "funcdef": "async def"}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"fullname": "pykos.services.actuator.ActuatorServiceClient.get_calibration_status", "modulename": "pykos.services.actuator", "qualname": "ActuatorServiceClient.get_calibration_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">actuator_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"fullname": "pykos.services.actuator.ActuatorServiceClient.command_actuators", "modulename": "pykos.services.actuator", "qualname": "ActuatorServiceClient.command_actuators", "kind": "function", "doc": "<p>Command multiple actuators at once.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>command_actuators([\n          ...     {\"actuator_id\": 1, \"position\": 90.0, \"velocity\": 100.0, \"torque\": 1.0},\n          ...     {\"actuator_id\": 2, \"position\": 180.0},\n          ... ])</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n\n<p>Args:\n    commands: List of dictionaries containing actuator commands.\n             Each dict should have 'actuator_id' and optionally 'position',\n             'velocity', and 'torque'.</p>\n\n<p>Returns:\n    List of ActionResult objects indicating success/failure for each command.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">commands</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pykos</span><span class=\"o\">.</span><span class=\"n\">services</span><span class=\"o\">.</span><span class=\"n\">actuator</span><span class=\"o\">.</span><span class=\"n\">ActuatorCommand</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">actuator_pb2</span><span class=\"o\">.</span><span class=\"n\">CommandActuatorsResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"fullname": "pykos.services.actuator.ActuatorServiceClient.configure_actuator", "modulename": "pykos.services.actuator", "qualname": "ActuatorServiceClient.configure_actuator", "kind": "function", "doc": "<p>Configure an actuator's parameters.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>configure_actuator(\n          ...     actuator_id=1,\n          ...     kp=1.0,\n          ...     kd=0.1,\n          ...     ki=0.01,\n          ...     max_torque=100.0,\n          ...     protective_torque=None,\n          ...     protection_time=None,\n          ...     torque_enabled=True,\n          ...     new_actuator_id=None,\n          ...     zero_position=True\n          ... )</p>\n\n<pre><code>&gt;&gt;&gt; configure_actuator(\n...     actuator_id=2,\n...     kp=1.0,\n...     kd=0.1,\n...     torque_enabled=True,\n... )\n</code></pre>\n      \n      <p>Args:\n          actuator_id: ID of the actuator to configure\n          **kwargs: Configuration parameters that may include:\n                   kp, kd, ki, max_torque, protective_torque,\n                   protection_time, torque_enabled, new_actuator_id</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n\n<p>Returns:\n    ActionResponse indicating success/failure</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t**kwargs: *&lt;class &#x27;pykos.services.actuator.ConfigureActuatorRequest&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">common_pb2</span><span class=\"o\">.</span><span class=\"n\">ActionResult</span>:</span></span>", "funcdef": "async def"}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"fullname": "pykos.services.actuator.ActuatorServiceClient.get_actuators_state", "modulename": "pykos.services.actuator", "qualname": "ActuatorServiceClient.get_actuators_state", "kind": "function", "doc": "<p>Get the state of multiple actuators.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>get_actuators_state([1, 2])</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n\n<p>Args:\n    actuator_ids: List of actuator IDs to query. If None, gets state of all actuators.</p>\n\n<p>Returns:\n    List of ActuatorStateResponse objects containing the state information</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">actuator_ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">actuator_pb2</span><span class=\"o\">.</span><span class=\"n\">GetActuatorsStateResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.imu": {"fullname": "pykos.services.imu", "modulename": "pykos.services.imu", "kind": "module", "doc": "<p>IMU service client.</p>\n"}, "pykos.services.imu.ZeroIMURequest": {"fullname": "pykos.services.imu.ZeroIMURequest", "modulename": "pykos.services.imu", "qualname": "ZeroIMURequest", "kind": "class", "doc": "<p></p>\n", "bases": "typing.TypedDict"}, "pykos.services.imu.ZeroIMURequest.max_retries": {"fullname": "pykos.services.imu.ZeroIMURequest.max_retries", "modulename": "pykos.services.imu", "qualname": "ZeroIMURequest.max_retries", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[int]"}, "pykos.services.imu.ZeroIMURequest.max_angular_error": {"fullname": "pykos.services.imu.ZeroIMURequest.max_angular_error", "modulename": "pykos.services.imu", "qualname": "ZeroIMURequest.max_angular_error", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.imu.ZeroIMURequest.max_velocity": {"fullname": "pykos.services.imu.ZeroIMURequest.max_velocity", "modulename": "pykos.services.imu", "qualname": "ZeroIMURequest.max_velocity", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.imu.ZeroIMURequest.max_acceleration": {"fullname": "pykos.services.imu.ZeroIMURequest.max_acceleration", "modulename": "pykos.services.imu", "qualname": "ZeroIMURequest.max_acceleration", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.imu.CalibrationStatus": {"fullname": "pykos.services.imu.CalibrationStatus", "modulename": "pykos.services.imu", "qualname": "CalibrationStatus", "kind": "class", "doc": "<p></p>\n"}, "pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"fullname": "pykos.services.imu.CalibrationStatus.IN_PROGRESS", "modulename": "pykos.services.imu", "qualname": "CalibrationStatus.IN_PROGRESS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;IN_PROGRESS&#x27;"}, "pykos.services.imu.CalibrationStatus.SUCCEEDED": {"fullname": "pykos.services.imu.CalibrationStatus.SUCCEEDED", "modulename": "pykos.services.imu", "qualname": "CalibrationStatus.SUCCEEDED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;SUCCEEDED&#x27;"}, "pykos.services.imu.CalibrationStatus.FAILED": {"fullname": "pykos.services.imu.CalibrationStatus.FAILED", "modulename": "pykos.services.imu", "qualname": "CalibrationStatus.FAILED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;FAILED&#x27;"}, "pykos.services.imu.CalibrationMetadata": {"fullname": "pykos.services.imu.CalibrationMetadata", "modulename": "pykos.services.imu", "qualname": "CalibrationMetadata", "kind": "class", "doc": "<p></p>\n"}, "pykos.services.imu.CalibrationMetadata.__init__": {"fullname": "pykos.services.imu.CalibrationMetadata.__init__", "modulename": "pykos.services.imu", "qualname": "CalibrationMetadata.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">metadata_any</span><span class=\"p\">:</span> <span class=\"n\">google</span><span class=\"o\">.</span><span class=\"n\">protobuf</span><span class=\"o\">.</span><span class=\"n\">any_pb2</span><span class=\"o\">.</span><span class=\"n\">Any</span></span>)</span>"}, "pykos.services.imu.CalibrationMetadata.status": {"fullname": "pykos.services.imu.CalibrationMetadata.status", "modulename": "pykos.services.imu", "qualname": "CalibrationMetadata.status", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None"}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"fullname": "pykos.services.imu.CalibrationMetadata.decode_metadata", "modulename": "pykos.services.imu", "qualname": "CalibrationMetadata.decode_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">metadata_any</span><span class=\"p\">:</span> <span class=\"n\">google</span><span class=\"o\">.</span><span class=\"n\">protobuf</span><span class=\"o\">.</span><span class=\"n\">any_pb2</span><span class=\"o\">.</span><span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pykos.services.imu.IMUServiceClient": {"fullname": "pykos.services.imu.IMUServiceClient", "modulename": "pykos.services.imu", "qualname": "IMUServiceClient", "kind": "class", "doc": "<p></p>\n"}, "pykos.services.imu.IMUServiceClient.__init__": {"fullname": "pykos.services.imu.IMUServiceClient.__init__", "modulename": "pykos.services.imu", "qualname": "IMUServiceClient.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">channel</span><span class=\"p\">:</span> <span class=\"n\">grpc</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">_base_channel</span><span class=\"o\">.</span><span class=\"n\">Channel</span></span>)</span>"}, "pykos.services.imu.IMUServiceClient.stub": {"fullname": "pykos.services.imu.IMUServiceClient.stub", "modulename": "pykos.services.imu", "qualname": "IMUServiceClient.stub", "kind": "variable", "doc": "<p></p>\n"}, "pykos.services.imu.IMUServiceClient.operations_stub": {"fullname": "pykos.services.imu.IMUServiceClient.operations_stub", "modulename": "pykos.services.imu", "qualname": "IMUServiceClient.operations_stub", "kind": "variable", "doc": "<p></p>\n"}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"fullname": "pykos.services.imu.IMUServiceClient.get_imu_values", "modulename": "pykos.services.imu", "qualname": "IMUServiceClient.get_imu_values", "kind": "function", "doc": "<p>Get the latest IMU sensor values.</p>\n\n<p>Returns:\n    ImuValuesResponse: The latest IMU sensor values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">imu_pb2</span><span class=\"o\">.</span><span class=\"n\">IMUValuesResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"fullname": "pykos.services.imu.IMUServiceClient.get_imu_advanced_values", "modulename": "pykos.services.imu", "qualname": "IMUServiceClient.get_imu_advanced_values", "kind": "function", "doc": "<p>Get the latest IMU advanced values.</p>\n\n<p>Returns:\n    ImuAdvancedValuesResponse: The latest IMU advanced values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">imu_pb2</span><span class=\"o\">.</span><span class=\"n\">IMUAdvancedValuesResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"fullname": "pykos.services.imu.IMUServiceClient.get_euler_angles", "modulename": "pykos.services.imu", "qualname": "IMUServiceClient.get_euler_angles", "kind": "function", "doc": "<p>Get the latest Euler angles.</p>\n\n<p>Returns:\n    EulerAnglesResponse: The latest Euler angles.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">imu_pb2</span><span class=\"o\">.</span><span class=\"n\">EulerAnglesResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"fullname": "pykos.services.imu.IMUServiceClient.get_quaternion", "modulename": "pykos.services.imu", "qualname": "IMUServiceClient.get_quaternion", "kind": "function", "doc": "<p>Get the latest quaternion.</p>\n\n<p>Returns:\n    QuaternionResponse: The latest quaternion.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">imu_pb2</span><span class=\"o\">.</span><span class=\"n\">QuaternionResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.imu.IMUServiceClient.zero": {"fullname": "pykos.services.imu.IMUServiceClient.zero", "modulename": "pykos.services.imu", "qualname": "IMUServiceClient.zero", "kind": "function", "doc": "<p>Zero the IMU.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>await zero(duration=1.0,\n          ...     max_retries=3,\n          ...     max_angular_error=1.0,\n          ...     max_velocity=1.0,\n          ...     max_acceleration=1.0\n          ... )</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n\n<p>Args:\n    duration: Duration in seconds for zeroing operation\n    **kwargs: Additional zeroing parameters that may include:\n             max_retries: Maximum number of retries\n             max_angular_error: Maximum angular error during zeroing\n             max_velocity: Maximum velocity during zeroing\n             max_acceleration: Maximum acceleration during zeroing</p>\n\n<p>Returns:\n    ActionResponse: The response from the zero operation.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">duration</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t**kwargs: *&lt;class &#x27;pykos.services.imu.ZeroIMURequest&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">common_pb2</span><span class=\"o\">.</span><span class=\"n\">ActionResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.imu.IMUServiceClient.calibrate": {"fullname": "pykos.services.imu.IMUServiceClient.calibrate", "modulename": "pykos.services.imu", "qualname": "IMUServiceClient.calibrate", "kind": "function", "doc": "<p>Calibrate the IMU.</p>\n\n<p>This starts a long-running calibration operation. The operation can be monitored\nusing get_calibration_status().</p>\n\n<p>Returns:\n    CalibrationMetadata: Metadata about the calibration operation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">imu_pb2</span><span class=\"o\">.</span><span class=\"n\">CalibrateIMUResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.inference": {"fullname": "pykos.services.inference", "modulename": "pykos.services.inference", "kind": "module", "doc": "<p>Inference service client.</p>\n"}, "pykos.services.inference.ModelMetadata": {"fullname": "pykos.services.inference.ModelMetadata", "modulename": "pykos.services.inference", "qualname": "ModelMetadata", "kind": "class", "doc": "<p>Model metadata for uploading models.</p>\n\n<p>All fields are optional and can be used to provide additional information about the model.</p>\n", "bases": "typing.TypedDict"}, "pykos.services.inference.ModelMetadata.model_name": {"fullname": "pykos.services.inference.ModelMetadata.model_name", "modulename": "pykos.services.inference", "qualname": "ModelMetadata.model_name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[str | None]"}, "pykos.services.inference.ModelMetadata.model_description": {"fullname": "pykos.services.inference.ModelMetadata.model_description", "modulename": "pykos.services.inference", "qualname": "ModelMetadata.model_description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[str | None]"}, "pykos.services.inference.ModelMetadata.model_version": {"fullname": "pykos.services.inference.ModelMetadata.model_version", "modulename": "pykos.services.inference", "qualname": "ModelMetadata.model_version", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[str | None]"}, "pykos.services.inference.ModelMetadata.model_author": {"fullname": "pykos.services.inference.ModelMetadata.model_author", "modulename": "pykos.services.inference", "qualname": "ModelMetadata.model_author", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[str | None]"}, "pykos.services.inference.TensorDimension": {"fullname": "pykos.services.inference.TensorDimension", "modulename": "pykos.services.inference", "qualname": "TensorDimension", "kind": "class", "doc": "<p>Information about a tensor dimension.</p>\n\n<p>Args:\n    size: Size of this dimension\n    name: Name of this dimension (e.g., \"batch\", \"channels\", \"height\")\n    dynamic: Whether this dimension can vary (e.g., batch size)</p>\n", "bases": "typing.TypedDict"}, "pykos.services.inference.TensorDimension.size": {"fullname": "pykos.services.inference.TensorDimension.size", "modulename": "pykos.services.inference", "qualname": "TensorDimension.size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pykos.services.inference.TensorDimension.name": {"fullname": "pykos.services.inference.TensorDimension.name", "modulename": "pykos.services.inference", "qualname": "TensorDimension.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pykos.services.inference.TensorDimension.dynamic": {"fullname": "pykos.services.inference.TensorDimension.dynamic", "modulename": "pykos.services.inference", "qualname": "TensorDimension.dynamic", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, "pykos.services.inference.Tensor": {"fullname": "pykos.services.inference.Tensor", "modulename": "pykos.services.inference", "qualname": "Tensor", "kind": "class", "doc": "<p>A tensor containing data.</p>\n\n<p>Args:\n    values: Tensor values in row-major order\n    shape: List of dimension information</p>\n", "bases": "typing.TypedDict"}, "pykos.services.inference.Tensor.values": {"fullname": "pykos.services.inference.Tensor.values", "modulename": "pykos.services.inference", "qualname": "Tensor.values", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[float]"}, "pykos.services.inference.Tensor.shape": {"fullname": "pykos.services.inference.Tensor.shape", "modulename": "pykos.services.inference", "qualname": "Tensor.shape", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[pykos.services.inference.TensorDimension]"}, "pykos.services.inference.ForwardResponse": {"fullname": "pykos.services.inference.ForwardResponse", "modulename": "pykos.services.inference", "qualname": "ForwardResponse", "kind": "class", "doc": "<p>Response from running model inference.</p>\n\n<p>Args:\n    outputs: Dictionary mapping tensor names to output tensors\n    error: Optional error information if inference failed</p>\n", "bases": "typing.TypedDict"}, "pykos.services.inference.ForwardResponse.outputs": {"fullname": "pykos.services.inference.ForwardResponse.outputs", "modulename": "pykos.services.inference", "qualname": "ForwardResponse.outputs", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[str, pykos.services.inference.Tensor]"}, "pykos.services.inference.ForwardResponse.error": {"fullname": "pykos.services.inference.ForwardResponse.error", "modulename": "pykos.services.inference", "qualname": "ForwardResponse.error", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[kos.common_pb2.Error | None]"}, "pykos.services.inference.ModelInfo": {"fullname": "pykos.services.inference.ModelInfo", "modulename": "pykos.services.inference", "qualname": "ModelInfo", "kind": "class", "doc": "<p>Information about a model.</p>\n\n<p>Args:\n    uid: Model UID (assigned by server)\n    metadata: Model metadata\n    input_specs: Expected input tensor specifications\n    output_specs: Expected output tensor specifications\n    description: str</p>\n", "bases": "typing.TypedDict"}, "pykos.services.inference.ModelInfo.uid": {"fullname": "pykos.services.inference.ModelInfo.uid", "modulename": "pykos.services.inference", "qualname": "ModelInfo.uid", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pykos.services.inference.ModelInfo.metadata": {"fullname": "pykos.services.inference.ModelInfo.metadata", "modulename": "pykos.services.inference", "qualname": "ModelInfo.metadata", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pykos.services.inference.ModelMetadata"}, "pykos.services.inference.ModelInfo.input_specs": {"fullname": "pykos.services.inference.ModelInfo.input_specs", "modulename": "pykos.services.inference", "qualname": "ModelInfo.input_specs", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[str, pykos.services.inference.Tensor]"}, "pykos.services.inference.ModelInfo.output_specs": {"fullname": "pykos.services.inference.ModelInfo.output_specs", "modulename": "pykos.services.inference", "qualname": "ModelInfo.output_specs", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[str, pykos.services.inference.Tensor]"}, "pykos.services.inference.ModelInfo.description": {"fullname": "pykos.services.inference.ModelInfo.description", "modulename": "pykos.services.inference", "qualname": "ModelInfo.description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pykos.services.inference.GetModelsInfoResponse": {"fullname": "pykos.services.inference.GetModelsInfoResponse", "modulename": "pykos.services.inference", "qualname": "GetModelsInfoResponse", "kind": "class", "doc": "<p>Response containing information about available models.</p>\n", "bases": "typing.TypedDict"}, "pykos.services.inference.GetModelsInfoResponse.models": {"fullname": "pykos.services.inference.GetModelsInfoResponse.models", "modulename": "pykos.services.inference", "qualname": "GetModelsInfoResponse.models", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[pykos.services.inference.ModelInfo]"}, "pykos.services.inference.GetModelsInfoResponse.error": {"fullname": "pykos.services.inference.GetModelsInfoResponse.error", "modulename": "pykos.services.inference", "qualname": "GetModelsInfoResponse.error", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[kos.common_pb2.Error | None]"}, "pykos.services.inference.InferenceServiceClient": {"fullname": "pykos.services.inference.InferenceServiceClient", "modulename": "pykos.services.inference", "qualname": "InferenceServiceClient", "kind": "class", "doc": "<p>Client for the InferenceService.</p>\n\n<p>This service allows uploading models and running inference on them.</p>\n"}, "pykos.services.inference.InferenceServiceClient.__init__": {"fullname": "pykos.services.inference.InferenceServiceClient.__init__", "modulename": "pykos.services.inference", "qualname": "InferenceServiceClient.__init__", "kind": "function", "doc": "<p>Initialize the inference service client.</p>\n\n<p>Args:\n    channel: gRPC channel to use for communication.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">channel</span><span class=\"p\">:</span> <span class=\"n\">grpc</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">_base_channel</span><span class=\"o\">.</span><span class=\"n\">Channel</span></span>)</span>"}, "pykos.services.inference.InferenceServiceClient.stub": {"fullname": "pykos.services.inference.InferenceServiceClient.stub", "modulename": "pykos.services.inference", "qualname": "InferenceServiceClient.stub", "kind": "variable", "doc": "<p></p>\n"}, "pykos.services.inference.InferenceServiceClient.upload_model": {"fullname": "pykos.services.inference.InferenceServiceClient.upload_model", "modulename": "pykos.services.inference", "qualname": "InferenceServiceClient.upload_model", "kind": "function", "doc": "<p>Upload a model to the robot.</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">upload_model</span><span class=\"p\">(</span><span class=\"n\">model_data</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span><span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;model_name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MyModel&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span><span class=\"s2\">&quot;model_description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;A model for inference&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span><span class=\"s2\">&quot;model_version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1.0.0&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span><span class=\"s2\">&quot;model_author&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;John Doe&quot;</span><span class=\"p\">})</span>\n</code></pre>\n</div>\n\n<p>Args:\n    model_data: The binary model data to upload.\n    metadata: Optional metadata about the model that can include:\n             model_name: Name of the model\n             model_description: Description of the model\n             model_version: Version of the model\n             model_author: Author of the model</p>\n\n<p>Returns:\n    UploadModelResponse containing the model UID and any error information.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">model_data</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">pykos</span><span class=\"o\">.</span><span class=\"n\">services</span><span class=\"o\">.</span><span class=\"n\">inference</span><span class=\"o\">.</span><span class=\"n\">ModelMetadata</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">inference_pb2</span><span class=\"o\">.</span><span class=\"n\">UploadModelResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.inference.InferenceServiceClient.load_models": {"fullname": "pykos.services.inference.InferenceServiceClient.load_models", "modulename": "pykos.services.inference", "qualname": "InferenceServiceClient.load_models", "kind": "function", "doc": "<p>Load models from the robot's filesystem.</p>\n\n<p>Args:\n    uids: List of model UIDs to load.</p>\n\n<p>Returns:\n    LoadModelsResponse containing information about the loaded models.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">uids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">inference_pb2</span><span class=\"o\">.</span><span class=\"n\">LoadModelsResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.inference.InferenceServiceClient.unload_models": {"fullname": "pykos.services.inference.InferenceServiceClient.unload_models", "modulename": "pykos.services.inference", "qualname": "InferenceServiceClient.unload_models", "kind": "function", "doc": "<p>Unload models from the robot's filesystem.</p>\n\n<p>Args:\n    uids: List of model UIDs to unload.</p>\n\n<p>Returns:\n    ActionResponse indicating success/failure of the unload operation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">uids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">common_pb2</span><span class=\"o\">.</span><span class=\"n\">ActionResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"fullname": "pykos.services.inference.InferenceServiceClient.get_models_info", "modulename": "pykos.services.inference", "qualname": "InferenceServiceClient.get_models_info", "kind": "function", "doc": "<p>Get information about available models.</p>\n\n<p>Args:\n    model_uids: Optional list of specific model UIDs to get info for.\n               If None, returns info for all models.</p>\n\n<p>Returns:\n    GetModelsInfoResponse containing:\n        models: List of ModelInfo objects\n        error: Optional error information if fetching failed</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">model_uids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pykos</span><span class=\"o\">.</span><span class=\"n\">services</span><span class=\"o\">.</span><span class=\"n\">inference</span><span class=\"o\">.</span><span class=\"n\">GetModelsInfoResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.inference.InferenceServiceClient.forward": {"fullname": "pykos.services.inference.InferenceServiceClient.forward", "modulename": "pykos.services.inference", "qualname": "InferenceServiceClient.forward", "kind": "function", "doc": "<p>Run inference using a specified model.</p>\n\n<p>Args:\n    model_uid: The UID of the model to use for inference.\n    inputs: Dictionary mapping tensor names to tensors.</p>\n\n<p>Returns:\n    ForwardResponse containing:\n        outputs: Dictionary mapping tensor names to output tensors\n        error: Optional error information if inference failed</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">model_uid</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pykos</span><span class=\"o\">.</span><span class=\"n\">services</span><span class=\"o\">.</span><span class=\"n\">inference</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pykos</span><span class=\"o\">.</span><span class=\"n\">services</span><span class=\"o\">.</span><span class=\"n\">inference</span><span class=\"o\">.</span><span class=\"n\">ForwardResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.led_matrix": {"fullname": "pykos.services.led_matrix", "modulename": "pykos.services.led_matrix", "kind": "module", "doc": "<p>LED Matrix service client.</p>\n"}, "pykos.services.led_matrix.MatrixInfo": {"fullname": "pykos.services.led_matrix.MatrixInfo", "modulename": "pykos.services.led_matrix", "qualname": "MatrixInfo", "kind": "class", "doc": "<p>Information about the LED matrix.</p>\n\n<p>Args:\n    width: Width in pixels\n    height: Height in pixels\n    brightness_levels: Number of brightness levels supported (1 for binary on/off)\n    color_capable: Whether the matrix supports color\n    bits_per_pixel: Number of bits used to represent each pixel\n    error: Optional error information</p>\n", "bases": "typing.TypedDict"}, "pykos.services.led_matrix.MatrixInfo.width": {"fullname": "pykos.services.led_matrix.MatrixInfo.width", "modulename": "pykos.services.led_matrix", "qualname": "MatrixInfo.width", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pykos.services.led_matrix.MatrixInfo.height": {"fullname": "pykos.services.led_matrix.MatrixInfo.height", "modulename": "pykos.services.led_matrix", "qualname": "MatrixInfo.height", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pykos.services.led_matrix.MatrixInfo.brightness_levels": {"fullname": "pykos.services.led_matrix.MatrixInfo.brightness_levels", "modulename": "pykos.services.led_matrix", "qualname": "MatrixInfo.brightness_levels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pykos.services.led_matrix.MatrixInfo.color_capable": {"fullname": "pykos.services.led_matrix.MatrixInfo.color_capable", "modulename": "pykos.services.led_matrix", "qualname": "MatrixInfo.color_capable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, "pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"fullname": "pykos.services.led_matrix.MatrixInfo.bits_per_pixel", "modulename": "pykos.services.led_matrix", "qualname": "MatrixInfo.bits_per_pixel", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pykos.services.led_matrix.MatrixInfo.error": {"fullname": "pykos.services.led_matrix.MatrixInfo.error", "modulename": "pykos.services.led_matrix", "qualname": "MatrixInfo.error", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[kos.common_pb2.Error | None]"}, "pykos.services.led_matrix.ImageData": {"fullname": "pykos.services.led_matrix.ImageData", "modulename": "pykos.services.led_matrix", "qualname": "ImageData", "kind": "class", "doc": "<p>Image data to be written to the LED matrix.</p>\n\n<p>Args:\n    buffer: Raw image data bytes\n    width: Image width in pixels\n    height: Image height in pixels\n    format: Pixel format specification (e.g. 'RGB888', 'BGR888', 'RGB565', 'MONO8')\n    brightness: Global brightness level (0-255)</p>\n", "bases": "typing.TypedDict"}, "pykos.services.led_matrix.ImageData.buffer": {"fullname": "pykos.services.led_matrix.ImageData.buffer", "modulename": "pykos.services.led_matrix", "qualname": "ImageData.buffer", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bytes"}, "pykos.services.led_matrix.ImageData.width": {"fullname": "pykos.services.led_matrix.ImageData.width", "modulename": "pykos.services.led_matrix", "qualname": "ImageData.width", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pykos.services.led_matrix.ImageData.height": {"fullname": "pykos.services.led_matrix.ImageData.height", "modulename": "pykos.services.led_matrix", "qualname": "ImageData.height", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pykos.services.led_matrix.ImageData.format": {"fullname": "pykos.services.led_matrix.ImageData.format", "modulename": "pykos.services.led_matrix", "qualname": "ImageData.format", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pykos.services.led_matrix.ImageData.brightness": {"fullname": "pykos.services.led_matrix.ImageData.brightness", "modulename": "pykos.services.led_matrix", "qualname": "ImageData.brightness", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"fullname": "pykos.services.led_matrix.LEDMatrixServiceClient", "modulename": "pykos.services.led_matrix", "qualname": "LEDMatrixServiceClient", "kind": "class", "doc": "<p>Client for the LEDMatrixService.</p>\n\n<p>This service allows controlling an LED matrix display.</p>\n"}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"fullname": "pykos.services.led_matrix.LEDMatrixServiceClient.__init__", "modulename": "pykos.services.led_matrix", "qualname": "LEDMatrixServiceClient.__init__", "kind": "function", "doc": "<p>Initialize the LED matrix service client.</p>\n\n<p>Args:\n    channel: gRPC channel to use for communication.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">channel</span><span class=\"p\">:</span> <span class=\"n\">grpc</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">_base_channel</span><span class=\"o\">.</span><span class=\"n\">Channel</span></span>)</span>"}, "pykos.services.led_matrix.LEDMatrixServiceClient.stub": {"fullname": "pykos.services.led_matrix.LEDMatrixServiceClient.stub", "modulename": "pykos.services.led_matrix", "qualname": "LEDMatrixServiceClient.stub", "kind": "variable", "doc": "<p></p>\n"}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"fullname": "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info", "modulename": "pykos.services.led_matrix", "qualname": "LEDMatrixServiceClient.get_matrix_info", "kind": "function", "doc": "<p>Get information about the LED matrix including dimensions and capabilities.</p>\n\n<p>Returns:\n    MatrixInfo containing:\n        width: Width in pixels\n        height: Height in pixels\n        brightness_levels: Number of brightness levels supported\n        color_capable: Whether the matrix supports color\n        bits_per_pixel: Number of bits used to represent each pixel\n        error: Optional error information</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pykos</span><span class=\"o\">.</span><span class=\"n\">services</span><span class=\"o\">.</span><span class=\"n\">led_matrix</span><span class=\"o\">.</span><span class=\"n\">MatrixInfo</span>:</span></span>", "funcdef": "async def"}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"fullname": "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer", "modulename": "pykos.services.led_matrix", "qualname": "LEDMatrixServiceClient.write_buffer", "kind": "function", "doc": "<p>Write binary on/off states to the LED matrix.</p>\n\n<p>The buffer should be width * height / 8 bytes long, where each bit\nrepresents one LED's on/off state.</p>\n\n<p>Args:\n    buffer: Binary buffer containing LED states</p>\n\n<p>Returns:\n    ActionResponse indicating success/failure of the write operation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">buffer</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">common_pb2</span><span class=\"o\">.</span><span class=\"n\">ActionResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"fullname": "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer", "modulename": "pykos.services.led_matrix", "qualname": "LEDMatrixServiceClient.write_color_buffer", "kind": "function", "doc": "<p>Write image data to the LED matrix.</p>\n\n<p>Args:\n    **kwargs: Image data containing the raw bytes, dimensions and format\n        buffer: Raw image data bytes\n        width: Image width in pixels\n        height: Image height in pixels\n        format: Pixel format specification (e.g. 'RGB888', 'BGR888', 'RGB565', 'MONO8')\n        brightness: Global brightness level (0-255)</p>\n\n<p>Returns:\n    ActionResponse indicating success/failure of the write operation.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t**kwargs: *&lt;class &#x27;pykos.services.led_matrix.ImageData&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">common_pb2</span><span class=\"o\">.</span><span class=\"n\">ActionResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.process_manager": {"fullname": "pykos.services.process_manager", "modulename": "pykos.services.process_manager", "kind": "module", "doc": "<p>Process manager service client.</p>\n"}, "pykos.services.process_manager.ProcessManagerServiceClient": {"fullname": "pykos.services.process_manager.ProcessManagerServiceClient", "modulename": "pykos.services.process_manager", "qualname": "ProcessManagerServiceClient", "kind": "class", "doc": "<p></p>\n"}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"fullname": "pykos.services.process_manager.ProcessManagerServiceClient.__init__", "modulename": "pykos.services.process_manager", "qualname": "ProcessManagerServiceClient.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">channel</span><span class=\"p\">:</span> <span class=\"n\">grpc</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">_base_channel</span><span class=\"o\">.</span><span class=\"n\">Channel</span></span>)</span>"}, "pykos.services.process_manager.ProcessManagerServiceClient.stub": {"fullname": "pykos.services.process_manager.ProcessManagerServiceClient.stub", "modulename": "pykos.services.process_manager", "qualname": "ProcessManagerServiceClient.stub", "kind": "variable", "doc": "<p></p>\n"}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"fullname": "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip", "modulename": "pykos.services.process_manager", "qualname": "ProcessManagerServiceClient.start_kclip", "kind": "function", "doc": "<p>Start KClip recording.</p>\n\n<p>Args:\n    action: The action string for the KClip request</p>\n\n<p>Returns:\n    The response from the server.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">action</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">process_manager_pb2</span><span class=\"o\">.</span><span class=\"n\">KClipStartResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"fullname": "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip", "modulename": "pykos.services.process_manager", "qualname": "ProcessManagerServiceClient.stop_kclip", "kind": "function", "doc": "<p>Stop KClip recording.</p>\n\n<p>Returns:\n    The response from the server.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">google</span><span class=\"o\">.</span><span class=\"n\">protobuf</span><span class=\"o\">.</span><span class=\"n\">empty_pb2</span><span class=\"o\">.</span><span class=\"n\">Empty</span> <span class=\"o\">=</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">process_manager_pb2</span><span class=\"o\">.</span><span class=\"n\">KClipStopResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.sim": {"fullname": "pykos.services.sim", "modulename": "pykos.services.sim", "kind": "module", "doc": "<p>Sim service client.</p>\n"}, "pykos.services.sim.DefaultPosition": {"fullname": "pykos.services.sim.DefaultPosition", "modulename": "pykos.services.sim", "qualname": "DefaultPosition", "kind": "class", "doc": "<p></p>\n", "bases": "typing.TypedDict"}, "pykos.services.sim.DefaultPosition.qpos": {"fullname": "pykos.services.sim.DefaultPosition.qpos", "modulename": "pykos.services.sim", "qualname": "DefaultPosition.qpos", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[float]"}, "pykos.services.sim.ResetRequest": {"fullname": "pykos.services.sim.ResetRequest", "modulename": "pykos.services.sim", "qualname": "ResetRequest", "kind": "class", "doc": "<p></p>\n", "bases": "typing.TypedDict"}, "pykos.services.sim.ResetRequest.initial_state": {"fullname": "pykos.services.sim.ResetRequest.initial_state", "modulename": "pykos.services.sim", "qualname": "ResetRequest.initial_state", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[pykos.services.sim.DefaultPosition]"}, "pykos.services.sim.ResetRequest.randomize": {"fullname": "pykos.services.sim.ResetRequest.randomize", "modulename": "pykos.services.sim", "qualname": "ResetRequest.randomize", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[bool]"}, "pykos.services.sim.StepRequest": {"fullname": "pykos.services.sim.StepRequest", "modulename": "pykos.services.sim", "qualname": "StepRequest", "kind": "class", "doc": "<p></p>\n", "bases": "typing.TypedDict"}, "pykos.services.sim.StepRequest.num_steps": {"fullname": "pykos.services.sim.StepRequest.num_steps", "modulename": "pykos.services.sim", "qualname": "StepRequest.num_steps", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pykos.services.sim.StepRequest.step_size": {"fullname": "pykos.services.sim.StepRequest.step_size", "modulename": "pykos.services.sim", "qualname": "StepRequest.step_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.sim.SimulationParameters": {"fullname": "pykos.services.sim.SimulationParameters", "modulename": "pykos.services.sim", "qualname": "SimulationParameters", "kind": "class", "doc": "<p></p>\n", "bases": "typing.TypedDict"}, "pykos.services.sim.SimulationParameters.time_scale": {"fullname": "pykos.services.sim.SimulationParameters.time_scale", "modulename": "pykos.services.sim", "qualname": "SimulationParameters.time_scale", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.sim.SimulationParameters.gravity": {"fullname": "pykos.services.sim.SimulationParameters.gravity", "modulename": "pykos.services.sim", "qualname": "SimulationParameters.gravity", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[float]"}, "pykos.services.sim.SimulationParameters.initial_state": {"fullname": "pykos.services.sim.SimulationParameters.initial_state", "modulename": "pykos.services.sim", "qualname": "SimulationParameters.initial_state", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[pykos.services.sim.DefaultPosition]"}, "pykos.services.sim.SimServiceClient": {"fullname": "pykos.services.sim.SimServiceClient", "modulename": "pykos.services.sim", "qualname": "SimServiceClient", "kind": "class", "doc": "<p></p>\n"}, "pykos.services.sim.SimServiceClient.__init__": {"fullname": "pykos.services.sim.SimServiceClient.__init__", "modulename": "pykos.services.sim", "qualname": "SimServiceClient.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">channel</span><span class=\"p\">:</span> <span class=\"n\">grpc</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">_base_channel</span><span class=\"o\">.</span><span class=\"n\">Channel</span></span>)</span>"}, "pykos.services.sim.SimServiceClient.stub": {"fullname": "pykos.services.sim.SimServiceClient.stub", "modulename": "pykos.services.sim", "qualname": "SimServiceClient.stub", "kind": "variable", "doc": "<p></p>\n"}, "pykos.services.sim.SimServiceClient.reset": {"fullname": "pykos.services.sim.SimServiceClient.reset", "modulename": "pykos.services.sim", "qualname": "SimServiceClient.reset", "kind": "function", "doc": "<p>Reset the simulation to its initial state.</p>\n\n<p>Args:\n    **kwargs: Reset parameters that may include:\n             initial_state: DefaultPosition to reset to\n             randomize: Whether to randomize the initial state</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>client.reset(\n          ...     initial_state={\"qpos\": [0.0, 0.0, 0.0]},\n          ...     randomize=True\n          ... )</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n\n<p>Returns:\n    ActionResponse indicating success/failure</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t**kwargs: *&lt;class &#x27;pykos.services.sim.ResetRequest&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">common_pb2</span><span class=\"o\">.</span><span class=\"n\">ActionResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.sim.SimServiceClient.set_paused": {"fullname": "pykos.services.sim.SimServiceClient.set_paused", "modulename": "pykos.services.sim", "qualname": "SimServiceClient.set_paused", "kind": "function", "doc": "<p>Pause or unpause the simulation.</p>\n\n<p>Args:\n    paused: True to pause, False to unpause</p>\n\n<p>Returns:\n    ActionResponse indicating success/failure</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">paused</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">common_pb2</span><span class=\"o\">.</span><span class=\"n\">ActionResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.sim.SimServiceClient.step": {"fullname": "pykos.services.sim.SimServiceClient.step", "modulename": "pykos.services.sim", "qualname": "SimServiceClient.step", "kind": "function", "doc": "<p>Step the simulation forward.</p>\n\n<p>Args:\n    num_steps: Number of simulation steps to take\n    step_size: Optional time per step in seconds</p>\n\n<p>Returns:\n    ActionResponse indicating success/failure</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">num_steps</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">step_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">common_pb2</span><span class=\"o\">.</span><span class=\"n\">ActionResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.sim.SimServiceClient.set_parameters": {"fullname": "pykos.services.sim.SimServiceClient.set_parameters", "modulename": "pykos.services.sim", "qualname": "SimServiceClient.set_parameters", "kind": "function", "doc": "<p>Set simulation parameters.</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">set_parameters</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">time_scale</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">gravity</span><span class=\"o\">=</span><span class=\"mf\">9.81</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">initial_state</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;qpos&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">]}</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Args:\n    **kwargs: Parameters that may include:\n             time_scale: Simulation time scale\n             gravity: Gravity constant\n             initial_state: Default position state</p>\n\n<p>Returns:\n    ActionResponse indicating success/failure</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t**kwargs: *&lt;class &#x27;pykos.services.sim.SimulationParameters&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">common_pb2</span><span class=\"o\">.</span><span class=\"n\">ActionResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.sim.SimServiceClient.get_parameters": {"fullname": "pykos.services.sim.SimServiceClient.get_parameters", "modulename": "pykos.services.sim", "qualname": "SimServiceClient.get_parameters", "kind": "function", "doc": "<p>Get current simulation parameters.</p>\n\n<p>Returns:\n    GetParametersResponse containing current parameters and any error</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">sim_pb2</span><span class=\"o\">.</span><span class=\"n\">GetParametersResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.sound": {"fullname": "pykos.services.sound", "modulename": "pykos.services.sound", "kind": "module", "doc": "<p>Sound service client.</p>\n"}, "pykos.services.sound.AudioCapability": {"fullname": "pykos.services.sound.AudioCapability", "modulename": "pykos.services.sound", "qualname": "AudioCapability", "kind": "class", "doc": "<p>Information about audio capabilities.</p>\n\n<p>Args:\n    sample_rates: List of supported sample rates (e.g., 44100, 48000)\n    bit_depths: List of supported bit depths (e.g., 16, 24, 32)\n    channels: List of supported channel counts (e.g., 1, 2)\n    available: Whether this capability is available</p>\n", "bases": "typing.TypedDict"}, "pykos.services.sound.AudioCapability.sample_rates": {"fullname": "pykos.services.sound.AudioCapability.sample_rates", "modulename": "pykos.services.sound", "qualname": "AudioCapability.sample_rates", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[int]"}, "pykos.services.sound.AudioCapability.bit_depths": {"fullname": "pykos.services.sound.AudioCapability.bit_depths", "modulename": "pykos.services.sound", "qualname": "AudioCapability.bit_depths", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[int]"}, "pykos.services.sound.AudioCapability.channels": {"fullname": "pykos.services.sound.AudioCapability.channels", "modulename": "pykos.services.sound", "qualname": "AudioCapability.channels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[int]"}, "pykos.services.sound.AudioCapability.available": {"fullname": "pykos.services.sound.AudioCapability.available", "modulename": "pykos.services.sound", "qualname": "AudioCapability.available", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, "pykos.services.sound.AudioInfo": {"fullname": "pykos.services.sound.AudioInfo", "modulename": "pykos.services.sound", "qualname": "AudioInfo", "kind": "class", "doc": "<p>Information about audio system capabilities.</p>\n\n<p>Args:\n    playback: Playback capabilities\n    recording: Recording capabilities\n    error: Optional error information</p>\n", "bases": "typing.TypedDict"}, "pykos.services.sound.AudioInfo.playback": {"fullname": "pykos.services.sound.AudioInfo.playback", "modulename": "pykos.services.sound", "qualname": "AudioInfo.playback", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pykos.services.sound.AudioCapability"}, "pykos.services.sound.AudioInfo.recording": {"fullname": "pykos.services.sound.AudioInfo.recording", "modulename": "pykos.services.sound", "qualname": "AudioInfo.recording", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pykos.services.sound.AudioCapability"}, "pykos.services.sound.AudioInfo.error": {"fullname": "pykos.services.sound.AudioInfo.error", "modulename": "pykos.services.sound", "qualname": "AudioInfo.error", "kind": "variable", "doc": "<p></p>\n", "annotation": ": NotRequired[kos.common_pb2.Error | None]"}, "pykos.services.sound.AudioConfig": {"fullname": "pykos.services.sound.AudioConfig", "modulename": "pykos.services.sound", "qualname": "AudioConfig", "kind": "class", "doc": "<p>Audio configuration parameters.</p>\n\n<p>Args:\n    sample_rate: Sample rate in Hz (e.g., 44100)\n    bit_depth: Bit depth (e.g., 16)\n    channels: Number of channels (1 for mono, 2 for stereo)</p>\n", "bases": "typing.TypedDict"}, "pykos.services.sound.AudioConfig.sample_rate": {"fullname": "pykos.services.sound.AudioConfig.sample_rate", "modulename": "pykos.services.sound", "qualname": "AudioConfig.sample_rate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pykos.services.sound.AudioConfig.bit_depth": {"fullname": "pykos.services.sound.AudioConfig.bit_depth", "modulename": "pykos.services.sound", "qualname": "AudioConfig.bit_depth", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pykos.services.sound.AudioConfig.channels": {"fullname": "pykos.services.sound.AudioConfig.channels", "modulename": "pykos.services.sound", "qualname": "AudioConfig.channels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pykos.services.sound.SoundServiceClient": {"fullname": "pykos.services.sound.SoundServiceClient", "modulename": "pykos.services.sound", "qualname": "SoundServiceClient", "kind": "class", "doc": "<p>Client for the SoundService.</p>\n\n<p>This service allows playing audio through speakers and recording from microphones.</p>\n"}, "pykos.services.sound.SoundServiceClient.__init__": {"fullname": "pykos.services.sound.SoundServiceClient.__init__", "modulename": "pykos.services.sound", "qualname": "SoundServiceClient.__init__", "kind": "function", "doc": "<p>Initialize the sound service client.</p>\n\n<p>Args:\n    channel: gRPC channel to use for communication.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">channel</span><span class=\"p\">:</span> <span class=\"n\">grpc</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">_base_channel</span><span class=\"o\">.</span><span class=\"n\">Channel</span></span>)</span>"}, "pykos.services.sound.SoundServiceClient.stub": {"fullname": "pykos.services.sound.SoundServiceClient.stub", "modulename": "pykos.services.sound", "qualname": "SoundServiceClient.stub", "kind": "variable", "doc": "<p></p>\n"}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"fullname": "pykos.services.sound.SoundServiceClient.get_audio_info", "modulename": "pykos.services.sound", "qualname": "SoundServiceClient.get_audio_info", "kind": "function", "doc": "<p>Get information about audio capabilities.</p>\n\n<p>Returns:\n    AudioInfo containing playback and recording capabilities.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pykos</span><span class=\"o\">.</span><span class=\"n\">services</span><span class=\"o\">.</span><span class=\"n\">sound</span><span class=\"o\">.</span><span class=\"n\">AudioInfo</span>:</span></span>", "funcdef": "async def"}, "pykos.services.sound.SoundServiceClient.play_audio": {"fullname": "pykos.services.sound.SoundServiceClient.play_audio", "modulename": "pykos.services.sound", "qualname": "SoundServiceClient.play_audio", "kind": "function", "doc": "<p>Stream PCM audio data to the speaker.</p>\n\n<p>Args:\n    audio_iterator: Iterator yielding chunks of PCM audio data\n    **kwargs: Audio configuration parameters\n        sample_rate: Sample rate in Hz (e.g., 44100)\n        bit_depth: Bit depth (e.g., 16)\n        channels: Number of channels (1 for mono, 2 for stereo)</p>\n\n<p>Returns:\n    ActionResponse indicating success/failure of the playback operation.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>config = AudioConfig(sample_rate=44100, bit_depth=16, channels=2)\n      with open('audio.raw', 'rb') as f:\n          ...     def chunks():\n          ...         while chunk := f.read(4096):\n          ...             yield chunk\n          ...     response = client.play_audio(chunks(), config)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">audio_iterator</span><span class=\"p\">:</span> <span class=\"n\">AsyncIterator</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span>,</span><span class=\"param\">\t**kwargs: *&lt;class &#x27;pykos.services.sound.AudioConfig&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">common_pb2</span><span class=\"o\">.</span><span class=\"n\">ActionResponse</span>:</span></span>", "funcdef": "async def"}, "pykos.services.sound.SoundServiceClient.record_audio": {"fullname": "pykos.services.sound.SoundServiceClient.record_audio", "modulename": "pykos.services.sound", "qualname": "SoundServiceClient.record_audio", "kind": "function", "doc": "<p>Record PCM audio data from the microphone.</p>\n\n<p>Args:\n    duration_ms: Recording duration in milliseconds (0 for continuous)\n    **kwargs: Audio configuration parameters\n        sample_rate: Sample rate in Hz (e.g., 44100)\n        bit_depth: Bit depth (e.g., 16)\n        channels: Number of channels (1 for mono, 2 for stereo)</p>\n\n<p>Yields:\n    Chunks of PCM audio data.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>config = AudioConfig(sample_rate=44100, bit_depth=16, channels=1)\n      with open('recording.raw', 'wb') as f:\n          ...     for chunk in client.record_audio(duration_ms=5000, **config):\n          ...         f.write(chunk)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">duration_ms</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t**kwargs: *&lt;class &#x27;pykos.services.sound.AudioConfig&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">AsyncGenerator</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "pykos.services.sound.SoundServiceClient.stop_recording": {"fullname": "pykos.services.sound.SoundServiceClient.stop_recording", "modulename": "pykos.services.sound", "qualname": "SoundServiceClient.stop_recording", "kind": "function", "doc": "<p>Stop an ongoing recording session.</p>\n\n<p>Returns:\n    ActionResponse indicating success/failure of the stop operation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kos</span><span class=\"o\">.</span><span class=\"n\">common_pb2</span><span class=\"o\">.</span><span class=\"n\">ActionResponse</span>:</span></span>", "funcdef": "async def"}}, "docInfo": {"pykos": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "pykos.client": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "pykos.client.KOS": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 48}, "pykos.client.KOS.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 3}, "pykos.client.KOS.ip": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.client.KOS.port": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.client.KOS.imu": {"qualname": 2, "fullname": 4, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.client.KOS.actuator": {"qualname": 2, "fullname": 4, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.client.KOS.led_matrix": {"qualname": 3, "fullname": 5, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.client.KOS.sound": {"qualname": 2, "fullname": 4, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.client.KOS.process_manager": {"qualname": 3, "fullname": 5, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.client.KOS.inference": {"qualname": 2, "fullname": 4, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.client.KOS.sim": {"qualname": 2, "fullname": 4, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.client.KOS.connect": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 12}, "pykos.client.KOS.close": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 7}, "pykos.services": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "pykos.services.actuator.ActuatorCommand": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pykos.services.actuator.ActuatorCommand.actuator_id": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ActuatorCommand.position": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ActuatorCommand.velocity": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ActuatorCommand.torque": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ConfigureActuatorRequest": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pykos.services.actuator.ConfigureActuatorRequest.actuator_id": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ConfigureActuatorRequest.kp": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ConfigureActuatorRequest.kd": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ConfigureActuatorRequest.ki": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ConfigureActuatorRequest.max_torque": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ConfigureActuatorRequest.protective_torque": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ConfigureActuatorRequest.protection_time": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ConfigureActuatorRequest.torque_enabled": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ConfigureActuatorRequest.zero_position": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ActuatorStateRequest": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pykos.services.actuator.ActuatorStateRequest.actuator_ids": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.CalibrationStatus": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.CalibrationStatus.Calibrating": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.CalibrationStatus.Calibrated": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.CalibrationStatus.Timeout": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.CalibrationMetadata": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.CalibrationMetadata.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "pykos.services.actuator.CalibrationMetadata.actuator_id": {"qualname": 3, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.CalibrationMetadata.status": {"qualname": 2, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 3}, "pykos.services.actuator.ActuatorServiceClient": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ActuatorServiceClient.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "pykos.services.actuator.ActuatorServiceClient.stub": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ActuatorServiceClient.operations_stub": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.actuator.ActuatorServiceClient.calibrate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 6}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 92}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 120}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 62}, "pykos.services.imu": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "pykos.services.imu.ZeroIMURequest": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pykos.services.imu.ZeroIMURequest.max_retries": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.imu.ZeroIMURequest.max_angular_error": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.imu.ZeroIMURequest.max_velocity": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.imu.ZeroIMURequest.max_acceleration": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.imu.CalibrationStatus": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.imu.CalibrationStatus.SUCCEEDED": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.imu.CalibrationStatus.FAILED": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.imu.CalibrationMetadata": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.imu.CalibrationMetadata.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "pykos.services.imu.CalibrationMetadata.status": {"qualname": 2, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 3}, "pykos.services.imu.IMUServiceClient": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.imu.IMUServiceClient.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "pykos.services.imu.IMUServiceClient.stub": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.imu.IMUServiceClient.operations_stub": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 19}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 19}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 17}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 15}, "pykos.services.imu.IMUServiceClient.zero": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 99}, "pykos.services.imu.IMUServiceClient.calibrate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 35}, "pykos.services.inference": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "pykos.services.inference.ModelMetadata": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 26}, "pykos.services.inference.ModelMetadata.model_name": {"qualname": 3, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.ModelMetadata.model_description": {"qualname": 3, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.ModelMetadata.model_version": {"qualname": 3, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.ModelMetadata.model_author": {"qualname": 3, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.TensorDimension": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 37}, "pykos.services.inference.TensorDimension.size": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.TensorDimension.name": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.TensorDimension.dynamic": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.Tensor": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 22}, "pykos.services.inference.Tensor.values": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.Tensor.shape": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.ForwardResponse": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 26}, "pykos.services.inference.ForwardResponse.outputs": {"qualname": 2, "fullname": 5, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.ForwardResponse.error": {"qualname": 2, "fullname": 5, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.ModelInfo": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 33}, "pykos.services.inference.ModelInfo.uid": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.ModelInfo.metadata": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.ModelInfo.input_specs": {"qualname": 3, "fullname": 6, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.ModelInfo.output_specs": {"qualname": 3, "fullname": 6, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.ModelInfo.description": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.GetModelsInfoResponse": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 9}, "pykos.services.inference.GetModelsInfoResponse.models": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.GetModelsInfoResponse.error": {"qualname": 2, "fullname": 5, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.InferenceServiceClient": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 20}, "pykos.services.inference.InferenceServiceClient.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 19}, "pykos.services.inference.InferenceServiceClient.stub": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.inference.InferenceServiceClient.upload_model": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 209}, "pykos.services.inference.InferenceServiceClient.load_models": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 32}, "pykos.services.inference.InferenceServiceClient.unload_models": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 32}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 48}, "pykos.services.inference.InferenceServiceClient.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 51}, "pykos.services.led_matrix": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "pykos.services.led_matrix.MatrixInfo": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 52}, "pykos.services.led_matrix.MatrixInfo.width": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.led_matrix.MatrixInfo.height": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.led_matrix.MatrixInfo.brightness_levels": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.led_matrix.MatrixInfo.color_capable": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.led_matrix.MatrixInfo.error": {"qualname": 2, "fullname": 6, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.led_matrix.ImageData": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 47}, "pykos.services.led_matrix.ImageData.buffer": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.led_matrix.ImageData.width": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.led_matrix.ImageData.height": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.led_matrix.ImageData.format": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.led_matrix.ImageData.brightness": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 20}, "pykos.services.led_matrix.LEDMatrixServiceClient.stub": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 55}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 54}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 66}, "pykos.services.process_manager": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "pykos.services.process_manager.ProcessManagerServiceClient": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "pykos.services.process_manager.ProcessManagerServiceClient.stub": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 26}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 15}, "pykos.services.sim": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "pykos.services.sim.DefaultPosition": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pykos.services.sim.DefaultPosition.qpos": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sim.ResetRequest": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pykos.services.sim.ResetRequest.initial_state": {"qualname": 3, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sim.ResetRequest.randomize": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sim.StepRequest": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pykos.services.sim.StepRequest.num_steps": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sim.StepRequest.step_size": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sim.SimulationParameters": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pykos.services.sim.SimulationParameters.time_scale": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sim.SimulationParameters.gravity": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sim.SimulationParameters.initial_state": {"qualname": 3, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sim.SimServiceClient": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sim.SimServiceClient.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "pykos.services.sim.SimServiceClient.stub": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sim.SimServiceClient.reset": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 71}, "pykos.services.sim.SimServiceClient.set_paused": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 24}, "pykos.services.sim.SimServiceClient.step": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 32}, "pykos.services.sim.SimServiceClient.set_parameters": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 148}, "pykos.services.sim.SimServiceClient.get_parameters": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 17}, "pykos.services.sound": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "pykos.services.sound.AudioCapability": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 49}, "pykos.services.sound.AudioCapability.sample_rates": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sound.AudioCapability.bit_depths": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sound.AudioCapability.channels": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sound.AudioCapability.available": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sound.AudioInfo": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 21}, "pykos.services.sound.AudioInfo.playback": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sound.AudioInfo.recording": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sound.AudioInfo.error": {"qualname": 2, "fullname": 5, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sound.AudioConfig": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 36}, "pykos.services.sound.AudioConfig.sample_rate": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sound.AudioConfig.bit_depth": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sound.AudioConfig.channels": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sound.SoundServiceClient": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "pykos.services.sound.SoundServiceClient.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 19}, "pykos.services.sound.SoundServiceClient.stub": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 18}, "pykos.services.sound.SoundServiceClient.play_audio": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 117}, "pykos.services.sound.SoundServiceClient.record_audio": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 111}, "pykos.services.sound.SoundServiceClient.stop_recording": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 19}}, "length": 178, "save": true}, "index": {"qualname": {"root": {"docs": {"pykos.client.KOS.__init__": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}}, "df": 10, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pykos.client.KOS": {"tf": 1}, "pykos.client.KOS.__init__": {"tf": 1}, "pykos.client.KOS.ip": {"tf": 1}, "pykos.client.KOS.port": {"tf": 1}, "pykos.client.KOS.imu": {"tf": 1}, "pykos.client.KOS.actuator": {"tf": 1}, "pykos.client.KOS.led_matrix": {"tf": 1}, "pykos.client.KOS.sound": {"tf": 1}, "pykos.client.KOS.process_manager": {"tf": 1}, "pykos.client.KOS.inference": {"tf": 1}, "pykos.client.KOS.sim": {"tf": 1}, "pykos.client.KOS.connect": {"tf": 1}, "pykos.client.KOS.close": {"tf": 1}}, "df": 13}}, "p": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.kp": {"tf": 1}}, "df": 1}, "d": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.kd": {"tf": 1}}, "df": 1}, "i": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.ki": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.__init__": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.sim.ResetRequest.initial_state": {"tf": 1}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pykos.client.KOS.inference": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.inference.InferenceServiceClient": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.stub": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}, "o": {"docs": {"pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}}, "df": 3}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.inference.ModelInfo.input_specs": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"pykos.client.KOS.ip": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "u": {"docs": {"pykos.client.KOS.imu": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.imu.IMUServiceClient": {"tf": 1}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 1}, "pykos.services.imu.IMUServiceClient.stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.operations_stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.ImageData.buffer": {"tf": 1}, "pykos.services.led_matrix.ImageData.width": {"tf": 1}, "pykos.services.led_matrix.ImageData.height": {"tf": 1}, "pykos.services.led_matrix.ImageData.format": {"tf": 1}, "pykos.services.led_matrix.ImageData.brightness": {"tf": 1}}, "df": 6}}}}}}}}, "d": {"docs": {"pykos.services.actuator.ActuatorCommand.actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.actuator_id": {"tf": 1}}, "df": 4, "s": {"docs": {"pykos.services.actuator.ActuatorStateRequest.actuator_ids": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.port": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.actuator.ActuatorCommand.position": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.zero_position": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pykos.client.KOS.process_manager": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stub": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.protective_torque": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.protection_time": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pykos.services.sound.AudioInfo.playback": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.client.KOS.actuator": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"tf": 1}, "pykos.services.actuator.ActuatorStateRequest.actuator_ids": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.actuator_id": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}}, "df": 7, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.actuator.ActuatorCommand": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.actuator_id": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.position": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.velocity": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.torque": {"tf": 1}}, "df": 5}}}}}}}, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorStateRequest": {"tf": 1}, "pykos.services.actuator.ActuatorStateRequest.actuator_ids": {"tf": 1}}, "df": 2}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.stub": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.operations_stub": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.imu.ZeroIMURequest.max_acceleration": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.imu.ZeroIMURequest.max_angular_error": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.inference.ModelMetadata.model_author": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioCapability.sample_rates": {"tf": 1}, "pykos.services.sound.AudioCapability.bit_depths": {"tf": 1}, "pykos.services.sound.AudioCapability.channels": {"tf": 1}, "pykos.services.sound.AudioCapability.available": {"tf": 1}}, "df": 5}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.AudioConfig.sample_rate": {"tf": 1}, "pykos.services.sound.AudioConfig.bit_depth": {"tf": 1}, "pykos.services.sound.AudioConfig.channels": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.sound.AudioInfo": {"tf": 1}, "pykos.services.sound.AudioInfo.playback": {"tf": 1}, "pykos.services.sound.AudioInfo.recording": {"tf": 1}, "pykos.services.sound.AudioInfo.error": {"tf": 1}}, "df": 4}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sound.AudioCapability.available": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.client.KOS.led_matrix": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.stub": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.led_matrix.MatrixInfo.brightness_levels": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pykos.client.KOS.led_matrix": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.width": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.height": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.brightness_levels": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.color_capable": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1}}, "df": 7}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.client.KOS.process_manager": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.max_torque": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_retries": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_angular_error": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_velocity": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_acceleration": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.inference.ModelInfo.metadata": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.inference.ModelMetadata.model_name": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_description": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_version": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_author": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}}, "df": 5, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_name": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_description": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_version": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_author": {"tf": 1}}, "df": 5}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.inference.ModelInfo": {"tf": 1}, "pykos.services.inference.ModelInfo.uid": {"tf": 1}, "pykos.services.inference.ModelInfo.metadata": {"tf": 1}, "pykos.services.inference.ModelInfo.input_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.output_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.description": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {"pykos.services.inference.GetModelsInfoResponse.models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pykos.client.KOS.sound": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sound.SoundServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stub": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"pykos.client.KOS.sim": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sim.SimulationParameters": {"tf": 1}, "pykos.services.sim.SimulationParameters.time_scale": {"tf": 1}, "pykos.services.sim.SimulationParameters.gravity": {"tf": 1}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sim.SimServiceClient": {"tf": 1}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 1}, "pykos.services.sim.SimServiceClient.stub": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.TensorDimension.size": {"tf": 1}, "pykos.services.sim.StepRequest.step_size": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.CalibrationMetadata.status": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.status": {"tf": 1}}, "df": 3}}, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.sim.ResetRequest.initial_state": {"tf": 1}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"pykos.services.actuator.ActuatorServiceClient.stub": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.operations_stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.operations_stub": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.stub": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.stub": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stub": {"tf": 1}, "pykos.services.sim.SimServiceClient.stub": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stub": {"tf": 1}}, "df": 9}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"pykos.services.sim.StepRequest.step_size": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sim.StepRequest": {"tf": 1}, "pykos.services.sim.StepRequest.num_steps": {"tf": 1}, "pykos.services.sim.StepRequest.step_size": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {"pykos.services.sim.StepRequest.num_steps": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.imu.CalibrationStatus.SUCCEEDED": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.Tensor.shape": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.inference.ModelInfo.input_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.output_specs": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sim.SimulationParameters.time_scale": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sound.AudioCapability.sample_rates": {"tf": 1}, "pykos.services.sound.AudioConfig.sample_rate": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.connect": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.kp": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.kd": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.ki": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.max_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protective_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protection_time": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.torque_enabled": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.zero_position": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.led_matrix.MatrixInfo.color_capable": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.client.KOS.close": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.CalibrationStatus": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Calibrating": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Calibrated": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Timeout": {"tf": 1}, "pykos.services.imu.CalibrationStatus": {"tf": 1}, "pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"tf": 1}, "pykos.services.imu.CalibrationStatus.SUCCEEDED": {"tf": 1}, "pykos.services.imu.CalibrationStatus.FAILED": {"tf": 1}}, "df": 8}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.actuator.CalibrationMetadata": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.actuator_id": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.status": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.imu.CalibrationMetadata": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.status": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}}, "df": 9}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.actuator.CalibrationStatus.Calibrating": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}}, "df": 2, "d": {"docs": {"pykos.services.actuator.CalibrationStatus.Calibrated": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.led_matrix.MatrixInfo.color_capable": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sound.AudioCapability.channels": {"tf": 1}, "pykos.services.sound.AudioConfig.channels": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.actuator.ActuatorCommand.velocity": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_velocity": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.inference.ModelMetadata.model_version": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}, "pykos.services.inference.Tensor.values": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorCommand.torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.max_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protective_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.torque_enabled": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.protection_time": {"tf": 1}, "pykos.services.sim.SimulationParameters.time_scale": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.CalibrationStatus.Timeout": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.inference.Tensor.values": {"tf": 1}, "pykos.services.inference.Tensor.shape": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.inference.TensorDimension.size": {"tf": 1}, "pykos.services.inference.TensorDimension.name": {"tf": 1}, "pykos.services.inference.TensorDimension.dynamic": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.torque_enabled": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.imu.ZeroIMURequest.max_angular_error": {"tf": 1}, "pykos.services.inference.ForwardResponse.error": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.error": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1}, "pykos.services.sound.AudioInfo.error": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.ModelMetadata.model_name": {"tf": 1}, "pykos.services.inference.TensorDimension.name": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"pykos.services.sim.StepRequest.num_steps": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.zero_position": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.imu.ZeroIMURequest": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_retries": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_angular_error": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_velocity": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_acceleration": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.inference.ModelMetadata.model_description": {"tf": 1}, "pykos.services.inference.ModelInfo.description": {"tf": 1}}, "df": 2}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.sim.DefaultPosition": {"tf": 1}, "pykos.services.sim.DefaultPosition.qpos": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pykos.services.sound.AudioConfig.bit_depth": {"tf": 1}}, "df": 1, "s": {"docs": {"pykos.services.sound.AudioCapability.bit_depths": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pykos.services.inference.TensorDimension.dynamic": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.operations_stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.operations_stub": {"tf": 1}}, "df": 2}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.inference.ModelInfo.output_specs": {"tf": 1}}, "df": 1, "s": {"docs": {"pykos.services.inference.ForwardResponse.outputs": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}}, "df": 10, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.GetModelsInfoResponse": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.models": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.error": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.sim.SimulationParameters.gravity": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.ZeroIMURequest.max_retries": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sim.SimServiceClient.reset": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sim.ResetRequest": {"tf": 1}, "pykos.services.sim.ResetRequest.initial_state": {"tf": 1}, "pykos.services.sim.ResetRequest.randomize": {"tf": 1}}, "df": 3}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.sound.AudioInfo.recording": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sim.ResetRequest.randomize": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sound.AudioConfig.sample_rate": {"tf": 1}}, "df": 1, "s": {"docs": {"pykos.services.sound.AudioCapability.sample_rates": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.imu.CalibrationStatus.FAILED": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.ForwardResponse.outputs": {"tf": 1}, "pykos.services.inference.ForwardResponse.error": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.led_matrix.ImageData.format": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sim.DefaultPosition.qpos": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.ModelInfo.uid": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pykos.services.led_matrix.MatrixInfo.width": {"tf": 1}, "pykos.services.led_matrix.ImageData.width": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.led_matrix.MatrixInfo.height": {"tf": 1}, "pykos.services.led_matrix.ImageData.height": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.led_matrix.MatrixInfo.brightness_levels": {"tf": 1}, "pykos.services.led_matrix.ImageData.brightness": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sound.AudioCapability.bit_depths": {"tf": 1}, "pykos.services.sound.AudioConfig.bit_depth": {"tf": 1}}, "df": 2, "s": {"docs": {"pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.led_matrix.ImageData.buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 3}}}}}}}}, "fullname": {"root": {"docs": {"pykos.client.KOS.__init__": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}}, "df": 10, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pykos": {"tf": 1}, "pykos.client": {"tf": 1}, "pykos.client.KOS": {"tf": 1}, "pykos.client.KOS.__init__": {"tf": 1}, "pykos.client.KOS.ip": {"tf": 1}, "pykos.client.KOS.port": {"tf": 1}, "pykos.client.KOS.imu": {"tf": 1}, "pykos.client.KOS.actuator": {"tf": 1}, "pykos.client.KOS.led_matrix": {"tf": 1}, "pykos.client.KOS.sound": {"tf": 1}, "pykos.client.KOS.process_manager": {"tf": 1}, "pykos.client.KOS.inference": {"tf": 1}, "pykos.client.KOS.sim": {"tf": 1}, "pykos.client.KOS.connect": {"tf": 1}, "pykos.client.KOS.close": {"tf": 1}, "pykos.services": {"tf": 1}, "pykos.services.actuator": {"tf": 1}, "pykos.services.actuator.ActuatorCommand": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.actuator_id": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.position": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.velocity": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.kp": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.kd": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.ki": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.max_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protective_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protection_time": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.torque_enabled": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.zero_position": {"tf": 1}, "pykos.services.actuator.ActuatorStateRequest": {"tf": 1}, "pykos.services.actuator.ActuatorStateRequest.actuator_ids": {"tf": 1}, "pykos.services.actuator.CalibrationStatus": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Calibrating": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Calibrated": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Timeout": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.actuator_id": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.status": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.stub": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.operations_stub": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.imu": {"tf": 1}, "pykos.services.imu.ZeroIMURequest": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_retries": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_angular_error": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_velocity": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_acceleration": {"tf": 1}, "pykos.services.imu.CalibrationStatus": {"tf": 1}, "pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"tf": 1}, "pykos.services.imu.CalibrationStatus.SUCCEEDED": {"tf": 1}, "pykos.services.imu.CalibrationStatus.FAILED": {"tf": 1}, "pykos.services.imu.CalibrationMetadata": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.status": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.imu.IMUServiceClient": {"tf": 1}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 1}, "pykos.services.imu.IMUServiceClient.stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.operations_stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference": {"tf": 1}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_name": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_description": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_version": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_author": {"tf": 1}, "pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.inference.TensorDimension.size": {"tf": 1}, "pykos.services.inference.TensorDimension.name": {"tf": 1}, "pykos.services.inference.TensorDimension.dynamic": {"tf": 1}, "pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.inference.Tensor.values": {"tf": 1}, "pykos.services.inference.Tensor.shape": {"tf": 1}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.ForwardResponse.outputs": {"tf": 1}, "pykos.services.inference.ForwardResponse.error": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1}, "pykos.services.inference.ModelInfo.uid": {"tf": 1}, "pykos.services.inference.ModelInfo.metadata": {"tf": 1}, "pykos.services.inference.ModelInfo.input_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.output_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.description": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.models": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.error": {"tf": 1}, "pykos.services.inference.InferenceServiceClient": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.stub": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}, "pykos.services.led_matrix": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.width": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.height": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.brightness_levels": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.color_capable": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.ImageData.buffer": {"tf": 1}, "pykos.services.led_matrix.ImageData.width": {"tf": 1}, "pykos.services.led_matrix.ImageData.height": {"tf": 1}, "pykos.services.led_matrix.ImageData.format": {"tf": 1}, "pykos.services.led_matrix.ImageData.brightness": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.stub": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.process_manager": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stub": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}, "pykos.services.sim": {"tf": 1}, "pykos.services.sim.DefaultPosition": {"tf": 1}, "pykos.services.sim.DefaultPosition.qpos": {"tf": 1}, "pykos.services.sim.ResetRequest": {"tf": 1}, "pykos.services.sim.ResetRequest.initial_state": {"tf": 1}, "pykos.services.sim.ResetRequest.randomize": {"tf": 1}, "pykos.services.sim.StepRequest": {"tf": 1}, "pykos.services.sim.StepRequest.num_steps": {"tf": 1}, "pykos.services.sim.StepRequest.step_size": {"tf": 1}, "pykos.services.sim.SimulationParameters": {"tf": 1}, "pykos.services.sim.SimulationParameters.time_scale": {"tf": 1}, "pykos.services.sim.SimulationParameters.gravity": {"tf": 1}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1}, "pykos.services.sim.SimServiceClient": {"tf": 1}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 1}, "pykos.services.sim.SimServiceClient.stub": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}, "pykos.services.sound": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioCapability.sample_rates": {"tf": 1}, "pykos.services.sound.AudioCapability.bit_depths": {"tf": 1}, "pykos.services.sound.AudioCapability.channels": {"tf": 1}, "pykos.services.sound.AudioCapability.available": {"tf": 1}, "pykos.services.sound.AudioInfo": {"tf": 1}, "pykos.services.sound.AudioInfo.playback": {"tf": 1}, "pykos.services.sound.AudioInfo.recording": {"tf": 1}, "pykos.services.sound.AudioInfo.error": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.AudioConfig.sample_rate": {"tf": 1}, "pykos.services.sound.AudioConfig.bit_depth": {"tf": 1}, "pykos.services.sound.AudioConfig.channels": {"tf": 1}, "pykos.services.sound.SoundServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stub": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 178}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.port": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.actuator.ActuatorCommand.position": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.zero_position": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pykos.client.KOS.process_manager": {"tf": 1}, "pykos.services.process_manager": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stub": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}}, "df": 7, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stub": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.protective_torque": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.protection_time": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pykos.services.sound.AudioInfo.playback": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client": {"tf": 1}, "pykos.client.KOS": {"tf": 1}, "pykos.client.KOS.__init__": {"tf": 1}, "pykos.client.KOS.ip": {"tf": 1}, "pykos.client.KOS.port": {"tf": 1}, "pykos.client.KOS.imu": {"tf": 1}, "pykos.client.KOS.actuator": {"tf": 1}, "pykos.client.KOS.led_matrix": {"tf": 1}, "pykos.client.KOS.sound": {"tf": 1}, "pykos.client.KOS.process_manager": {"tf": 1}, "pykos.client.KOS.inference": {"tf": 1}, "pykos.client.KOS.sim": {"tf": 1}, "pykos.client.KOS.connect": {"tf": 1}, "pykos.client.KOS.close": {"tf": 1}}, "df": 14}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.client.KOS.close": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.connect": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.kp": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.kd": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.ki": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.max_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protective_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protection_time": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.torque_enabled": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.zero_position": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.led_matrix.MatrixInfo.color_capable": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.CalibrationStatus": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Calibrating": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Calibrated": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Timeout": {"tf": 1}, "pykos.services.imu.CalibrationStatus": {"tf": 1}, "pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"tf": 1}, "pykos.services.imu.CalibrationStatus.SUCCEEDED": {"tf": 1}, "pykos.services.imu.CalibrationStatus.FAILED": {"tf": 1}}, "df": 8}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.actuator.CalibrationMetadata": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.actuator_id": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.status": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.imu.CalibrationMetadata": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.status": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}}, "df": 9}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.actuator.CalibrationStatus.Calibrating": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}}, "df": 2, "d": {"docs": {"pykos.services.actuator.CalibrationStatus.Calibrated": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.led_matrix.MatrixInfo.color_capable": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sound.AudioCapability.channels": {"tf": 1}, "pykos.services.sound.AudioConfig.channels": {"tf": 1}}, "df": 2}}}}}}}}, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pykos.client.KOS": {"tf": 1}, "pykos.client.KOS.__init__": {"tf": 1}, "pykos.client.KOS.ip": {"tf": 1}, "pykos.client.KOS.port": {"tf": 1}, "pykos.client.KOS.imu": {"tf": 1}, "pykos.client.KOS.actuator": {"tf": 1}, "pykos.client.KOS.led_matrix": {"tf": 1}, "pykos.client.KOS.sound": {"tf": 1}, "pykos.client.KOS.process_manager": {"tf": 1}, "pykos.client.KOS.inference": {"tf": 1}, "pykos.client.KOS.sim": {"tf": 1}, "pykos.client.KOS.connect": {"tf": 1}, "pykos.client.KOS.close": {"tf": 1}}, "df": 13}}, "p": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.kp": {"tf": 1}}, "df": 1}, "d": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.kd": {"tf": 1}}, "df": 1}, "i": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.ki": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.__init__": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.sim.ResetRequest.initial_state": {"tf": 1}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pykos.client.KOS.inference": {"tf": 1}, "pykos.services.inference": {"tf": 1}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_name": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_description": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_version": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_author": {"tf": 1}, "pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.inference.TensorDimension.size": {"tf": 1}, "pykos.services.inference.TensorDimension.name": {"tf": 1}, "pykos.services.inference.TensorDimension.dynamic": {"tf": 1}, "pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.inference.Tensor.values": {"tf": 1}, "pykos.services.inference.Tensor.shape": {"tf": 1}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.ForwardResponse.outputs": {"tf": 1}, "pykos.services.inference.ForwardResponse.error": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1}, "pykos.services.inference.ModelInfo.uid": {"tf": 1}, "pykos.services.inference.ModelInfo.metadata": {"tf": 1}, "pykos.services.inference.ModelInfo.input_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.output_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.description": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.models": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.error": {"tf": 1}, "pykos.services.inference.InferenceServiceClient": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.stub": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 34, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.inference.InferenceServiceClient": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.stub": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}, "o": {"docs": {"pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}}, "df": 3}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.inference.ModelInfo.input_specs": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"pykos.client.KOS.ip": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "u": {"docs": {"pykos.client.KOS.imu": {"tf": 1}, "pykos.services.imu": {"tf": 1}, "pykos.services.imu.ZeroIMURequest": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_retries": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_angular_error": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_velocity": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_acceleration": {"tf": 1}, "pykos.services.imu.CalibrationStatus": {"tf": 1}, "pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"tf": 1}, "pykos.services.imu.CalibrationStatus.SUCCEEDED": {"tf": 1}, "pykos.services.imu.CalibrationStatus.FAILED": {"tf": 1}, "pykos.services.imu.CalibrationMetadata": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.status": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.imu.IMUServiceClient": {"tf": 1}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 1}, "pykos.services.imu.IMUServiceClient.stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.operations_stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}}, "df": 25, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.imu.IMUServiceClient": {"tf": 1}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 1}, "pykos.services.imu.IMUServiceClient.stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.operations_stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.ImageData.buffer": {"tf": 1}, "pykos.services.led_matrix.ImageData.width": {"tf": 1}, "pykos.services.led_matrix.ImageData.height": {"tf": 1}, "pykos.services.led_matrix.ImageData.format": {"tf": 1}, "pykos.services.led_matrix.ImageData.brightness": {"tf": 1}}, "df": 6}}}}}}}}, "d": {"docs": {"pykos.services.actuator.ActuatorCommand.actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.actuator_id": {"tf": 1}}, "df": 4, "s": {"docs": {"pykos.services.actuator.ActuatorStateRequest.actuator_ids": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.client.KOS.actuator": {"tf": 1}, "pykos.services.actuator": {"tf": 1}, "pykos.services.actuator.ActuatorCommand": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.actuator_id": {"tf": 1.4142135623730951}, "pykos.services.actuator.ActuatorCommand.position": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.velocity": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.actuator_id": {"tf": 1.4142135623730951}, "pykos.services.actuator.ConfigureActuatorRequest.kp": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.kd": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.ki": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.max_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protective_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protection_time": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.torque_enabled": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"tf": 1.4142135623730951}, "pykos.services.actuator.ConfigureActuatorRequest.zero_position": {"tf": 1}, "pykos.services.actuator.ActuatorStateRequest": {"tf": 1}, "pykos.services.actuator.ActuatorStateRequest.actuator_ids": {"tf": 1.4142135623730951}, "pykos.services.actuator.CalibrationStatus": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Calibrating": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Calibrated": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Timeout": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.actuator_id": {"tf": 1.4142135623730951}, "pykos.services.actuator.CalibrationMetadata.status": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.stub": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.operations_stub": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.4142135623730951}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}}, "df": 38, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.actuator.ActuatorCommand": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.actuator_id": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.position": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.velocity": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.torque": {"tf": 1}}, "df": 5}}}}}}}, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorStateRequest": {"tf": 1}, "pykos.services.actuator.ActuatorStateRequest.actuator_ids": {"tf": 1}}, "df": 2}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.stub": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.operations_stub": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.imu.ZeroIMURequest.max_acceleration": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.imu.ZeroIMURequest.max_angular_error": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.inference.ModelMetadata.model_author": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioCapability.sample_rates": {"tf": 1}, "pykos.services.sound.AudioCapability.bit_depths": {"tf": 1}, "pykos.services.sound.AudioCapability.channels": {"tf": 1}, "pykos.services.sound.AudioCapability.available": {"tf": 1}}, "df": 5}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.AudioConfig.sample_rate": {"tf": 1}, "pykos.services.sound.AudioConfig.bit_depth": {"tf": 1}, "pykos.services.sound.AudioConfig.channels": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.sound.AudioInfo": {"tf": 1}, "pykos.services.sound.AudioInfo.playback": {"tf": 1}, "pykos.services.sound.AudioInfo.recording": {"tf": 1}, "pykos.services.sound.AudioInfo.error": {"tf": 1}}, "df": 4}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sound.AudioCapability.available": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.client.KOS.led_matrix": {"tf": 1}, "pykos.services.led_matrix": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.width": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.height": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.brightness_levels": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.color_capable": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.ImageData.buffer": {"tf": 1}, "pykos.services.led_matrix.ImageData.width": {"tf": 1}, "pykos.services.led_matrix.ImageData.height": {"tf": 1}, "pykos.services.led_matrix.ImageData.format": {"tf": 1}, "pykos.services.led_matrix.ImageData.brightness": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.stub": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 21, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.stub": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.led_matrix.MatrixInfo.brightness_levels": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pykos.client.KOS.led_matrix": {"tf": 1}, "pykos.services.led_matrix": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.width": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.height": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.brightness_levels": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.color_capable": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.ImageData.buffer": {"tf": 1}, "pykos.services.led_matrix.ImageData.width": {"tf": 1}, "pykos.services.led_matrix.ImageData.height": {"tf": 1}, "pykos.services.led_matrix.ImageData.format": {"tf": 1}, "pykos.services.led_matrix.ImageData.brightness": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.stub": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 21, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.width": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.height": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.brightness_levels": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.color_capable": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1}}, "df": 7}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.client.KOS.process_manager": {"tf": 1}, "pykos.services.process_manager": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stub": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}}, "df": 7}}}}}, "x": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.max_torque": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_retries": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_angular_error": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_velocity": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_acceleration": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.inference.ModelInfo.metadata": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.inference.ModelMetadata.model_name": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_description": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_version": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_author": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}}, "df": 5, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_name": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_description": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_version": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_author": {"tf": 1}}, "df": 5}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.inference.ModelInfo": {"tf": 1}, "pykos.services.inference.ModelInfo.uid": {"tf": 1}, "pykos.services.inference.ModelInfo.metadata": {"tf": 1}, "pykos.services.inference.ModelInfo.input_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.output_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.description": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {"pykos.services.inference.GetModelsInfoResponse.models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pykos.client.KOS.sound": {"tf": 1}, "pykos.services.sound": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioCapability.sample_rates": {"tf": 1}, "pykos.services.sound.AudioCapability.bit_depths": {"tf": 1}, "pykos.services.sound.AudioCapability.channels": {"tf": 1}, "pykos.services.sound.AudioCapability.available": {"tf": 1}, "pykos.services.sound.AudioInfo": {"tf": 1}, "pykos.services.sound.AudioInfo.playback": {"tf": 1}, "pykos.services.sound.AudioInfo.recording": {"tf": 1}, "pykos.services.sound.AudioInfo.error": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.AudioConfig.sample_rate": {"tf": 1}, "pykos.services.sound.AudioConfig.bit_depth": {"tf": 1}, "pykos.services.sound.AudioConfig.channels": {"tf": 1}, "pykos.services.sound.SoundServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stub": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 22, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sound.SoundServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stub": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"pykos.client.KOS.sim": {"tf": 1}, "pykos.services.sim": {"tf": 1}, "pykos.services.sim.DefaultPosition": {"tf": 1}, "pykos.services.sim.DefaultPosition.qpos": {"tf": 1}, "pykos.services.sim.ResetRequest": {"tf": 1}, "pykos.services.sim.ResetRequest.initial_state": {"tf": 1}, "pykos.services.sim.ResetRequest.randomize": {"tf": 1}, "pykos.services.sim.StepRequest": {"tf": 1}, "pykos.services.sim.StepRequest.num_steps": {"tf": 1}, "pykos.services.sim.StepRequest.step_size": {"tf": 1}, "pykos.services.sim.SimulationParameters": {"tf": 1}, "pykos.services.sim.SimulationParameters.time_scale": {"tf": 1}, "pykos.services.sim.SimulationParameters.gravity": {"tf": 1}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1}, "pykos.services.sim.SimServiceClient": {"tf": 1}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 1}, "pykos.services.sim.SimServiceClient.stub": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}}, "df": 22, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sim.SimulationParameters": {"tf": 1}, "pykos.services.sim.SimulationParameters.time_scale": {"tf": 1}, "pykos.services.sim.SimulationParameters.gravity": {"tf": 1}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sim.SimServiceClient": {"tf": 1}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 1}, "pykos.services.sim.SimServiceClient.stub": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.TensorDimension.size": {"tf": 1}, "pykos.services.sim.StepRequest.step_size": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services": {"tf": 1}, "pykos.services.actuator": {"tf": 1}, "pykos.services.actuator.ActuatorCommand": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.actuator_id": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.position": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.velocity": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.kp": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.kd": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.ki": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.max_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protective_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protection_time": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.torque_enabled": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.zero_position": {"tf": 1}, "pykos.services.actuator.ActuatorStateRequest": {"tf": 1}, "pykos.services.actuator.ActuatorStateRequest.actuator_ids": {"tf": 1}, "pykos.services.actuator.CalibrationStatus": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Calibrating": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Calibrated": {"tf": 1}, "pykos.services.actuator.CalibrationStatus.Timeout": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.actuator_id": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.status": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.stub": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.operations_stub": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.imu": {"tf": 1}, "pykos.services.imu.ZeroIMURequest": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_retries": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_angular_error": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_velocity": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_acceleration": {"tf": 1}, "pykos.services.imu.CalibrationStatus": {"tf": 1}, "pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"tf": 1}, "pykos.services.imu.CalibrationStatus.SUCCEEDED": {"tf": 1}, "pykos.services.imu.CalibrationStatus.FAILED": {"tf": 1}, "pykos.services.imu.CalibrationMetadata": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.status": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.imu.IMUServiceClient": {"tf": 1}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 1}, "pykos.services.imu.IMUServiceClient.stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.operations_stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference": {"tf": 1}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_name": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_description": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_version": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_author": {"tf": 1}, "pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.inference.TensorDimension.size": {"tf": 1}, "pykos.services.inference.TensorDimension.name": {"tf": 1}, "pykos.services.inference.TensorDimension.dynamic": {"tf": 1}, "pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.inference.Tensor.values": {"tf": 1}, "pykos.services.inference.Tensor.shape": {"tf": 1}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.ForwardResponse.outputs": {"tf": 1}, "pykos.services.inference.ForwardResponse.error": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1}, "pykos.services.inference.ModelInfo.uid": {"tf": 1}, "pykos.services.inference.ModelInfo.metadata": {"tf": 1}, "pykos.services.inference.ModelInfo.input_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.output_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.description": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.models": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.error": {"tf": 1}, "pykos.services.inference.InferenceServiceClient": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.stub": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}, "pykos.services.led_matrix": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.width": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.height": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.brightness_levels": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.color_capable": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.ImageData.buffer": {"tf": 1}, "pykos.services.led_matrix.ImageData.width": {"tf": 1}, "pykos.services.led_matrix.ImageData.height": {"tf": 1}, "pykos.services.led_matrix.ImageData.format": {"tf": 1}, "pykos.services.led_matrix.ImageData.brightness": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.stub": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.process_manager": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stub": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}, "pykos.services.sim": {"tf": 1}, "pykos.services.sim.DefaultPosition": {"tf": 1}, "pykos.services.sim.DefaultPosition.qpos": {"tf": 1}, "pykos.services.sim.ResetRequest": {"tf": 1}, "pykos.services.sim.ResetRequest.initial_state": {"tf": 1}, "pykos.services.sim.ResetRequest.randomize": {"tf": 1}, "pykos.services.sim.StepRequest": {"tf": 1}, "pykos.services.sim.StepRequest.num_steps": {"tf": 1}, "pykos.services.sim.StepRequest.step_size": {"tf": 1}, "pykos.services.sim.SimulationParameters": {"tf": 1}, "pykos.services.sim.SimulationParameters.time_scale": {"tf": 1}, "pykos.services.sim.SimulationParameters.gravity": {"tf": 1}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1}, "pykos.services.sim.SimServiceClient": {"tf": 1}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 1}, "pykos.services.sim.SimServiceClient.stub": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}, "pykos.services.sound": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioCapability.sample_rates": {"tf": 1}, "pykos.services.sound.AudioCapability.bit_depths": {"tf": 1}, "pykos.services.sound.AudioCapability.channels": {"tf": 1}, "pykos.services.sound.AudioCapability.available": {"tf": 1}, "pykos.services.sound.AudioInfo": {"tf": 1}, "pykos.services.sound.AudioInfo.playback": {"tf": 1}, "pykos.services.sound.AudioInfo.recording": {"tf": 1}, "pykos.services.sound.AudioInfo.error": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.AudioConfig.sample_rate": {"tf": 1}, "pykos.services.sound.AudioConfig.bit_depth": {"tf": 1}, "pykos.services.sound.AudioConfig.channels": {"tf": 1}, "pykos.services.sound.SoundServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stub": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 163}}}}}}, "t": {"docs": {"pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.CalibrationMetadata.status": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.status": {"tf": 1}}, "df": 3}}, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.sim.ResetRequest.initial_state": {"tf": 1}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"pykos.services.actuator.ActuatorServiceClient.stub": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.operations_stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.operations_stub": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.stub": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.stub": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stub": {"tf": 1}, "pykos.services.sim.SimServiceClient.stub": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stub": {"tf": 1}}, "df": 9}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"pykos.services.sim.StepRequest.step_size": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sim.StepRequest": {"tf": 1}, "pykos.services.sim.StepRequest.num_steps": {"tf": 1}, "pykos.services.sim.StepRequest.step_size": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {"pykos.services.sim.StepRequest.num_steps": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.imu.CalibrationStatus.SUCCEEDED": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.Tensor.shape": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.inference.ModelInfo.input_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.output_specs": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sim.SimulationParameters.time_scale": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sound.AudioCapability.sample_rates": {"tf": 1}, "pykos.services.sound.AudioConfig.sample_rate": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.actuator.ActuatorCommand.velocity": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_velocity": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.inference.ModelMetadata.model_version": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}, "pykos.services.inference.Tensor.values": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorCommand.torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.max_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protective_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.torque_enabled": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.protection_time": {"tf": 1}, "pykos.services.sim.SimulationParameters.time_scale": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.CalibrationStatus.Timeout": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.inference.Tensor.values": {"tf": 1}, "pykos.services.inference.Tensor.shape": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.inference.TensorDimension.size": {"tf": 1}, "pykos.services.inference.TensorDimension.name": {"tf": 1}, "pykos.services.inference.TensorDimension.dynamic": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.torque_enabled": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.imu.ZeroIMURequest.max_angular_error": {"tf": 1}, "pykos.services.inference.ForwardResponse.error": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.error": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1}, "pykos.services.sound.AudioInfo.error": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.ModelMetadata.model_name": {"tf": 1}, "pykos.services.inference.TensorDimension.name": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"pykos.services.sim.StepRequest.num_steps": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.zero_position": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.imu.ZeroIMURequest": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_retries": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_angular_error": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_velocity": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_acceleration": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.inference.ModelMetadata.model_description": {"tf": 1}, "pykos.services.inference.ModelInfo.description": {"tf": 1}}, "df": 2}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.sim.DefaultPosition": {"tf": 1}, "pykos.services.sim.DefaultPosition.qpos": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pykos.services.sound.AudioConfig.bit_depth": {"tf": 1}}, "df": 1, "s": {"docs": {"pykos.services.sound.AudioCapability.bit_depths": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pykos.services.inference.TensorDimension.dynamic": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.operations_stub": {"tf": 1}, "pykos.services.imu.IMUServiceClient.operations_stub": {"tf": 1}}, "df": 2}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.inference.ModelInfo.output_specs": {"tf": 1}}, "df": 1, "s": {"docs": {"pykos.services.inference.ForwardResponse.outputs": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}}, "df": 10, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.GetModelsInfoResponse": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.models": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.error": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.sim.SimulationParameters.gravity": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.ZeroIMURequest.max_retries": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sim.SimServiceClient.reset": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sim.ResetRequest": {"tf": 1}, "pykos.services.sim.ResetRequest.initial_state": {"tf": 1}, "pykos.services.sim.ResetRequest.randomize": {"tf": 1}}, "df": 3}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.sound.AudioInfo.recording": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sim.ResetRequest.randomize": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sound.AudioConfig.sample_rate": {"tf": 1}}, "df": 1, "s": {"docs": {"pykos.services.sound.AudioCapability.sample_rates": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.imu.CalibrationStatus.FAILED": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.ForwardResponse.outputs": {"tf": 1}, "pykos.services.inference.ForwardResponse.error": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.led_matrix.ImageData.format": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sim.DefaultPosition.qpos": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.ModelInfo.uid": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pykos.services.led_matrix.MatrixInfo.width": {"tf": 1}, "pykos.services.led_matrix.ImageData.width": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.led_matrix.MatrixInfo.height": {"tf": 1}, "pykos.services.led_matrix.ImageData.height": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.led_matrix.MatrixInfo.brightness_levels": {"tf": 1}, "pykos.services.led_matrix.ImageData.brightness": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sound.AudioCapability.bit_depths": {"tf": 1}, "pykos.services.sound.AudioConfig.bit_depth": {"tf": 1}}, "df": 2, "s": {"docs": {"pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.led_matrix.ImageData.buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 3}}}}}}}}, "annotation": {"root": {"docs": {"pykos.client.KOS.imu": {"tf": 1}, "pykos.client.KOS.actuator": {"tf": 1}, "pykos.client.KOS.led_matrix": {"tf": 1}, "pykos.client.KOS.sound": {"tf": 1}, "pykos.client.KOS.process_manager": {"tf": 1}, "pykos.client.KOS.inference": {"tf": 1}, "pykos.client.KOS.sim": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.actuator_id": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.position": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.velocity": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.kp": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.kd": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.ki": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.max_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protective_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protection_time": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.torque_enabled": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.zero_position": {"tf": 1}, "pykos.services.actuator.ActuatorStateRequest.actuator_ids": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.actuator_id": {"tf": 1.4142135623730951}, "pykos.services.actuator.CalibrationMetadata.status": {"tf": 1.4142135623730951}, "pykos.services.imu.ZeroIMURequest.max_retries": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_angular_error": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_velocity": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_acceleration": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.status": {"tf": 1.4142135623730951}, "pykos.services.inference.ModelMetadata.model_name": {"tf": 1.4142135623730951}, "pykos.services.inference.ModelMetadata.model_description": {"tf": 1.4142135623730951}, "pykos.services.inference.ModelMetadata.model_version": {"tf": 1.4142135623730951}, "pykos.services.inference.ModelMetadata.model_author": {"tf": 1.4142135623730951}, "pykos.services.inference.TensorDimension.size": {"tf": 1}, "pykos.services.inference.TensorDimension.name": {"tf": 1}, "pykos.services.inference.TensorDimension.dynamic": {"tf": 1}, "pykos.services.inference.Tensor.values": {"tf": 1}, "pykos.services.inference.Tensor.shape": {"tf": 1}, "pykos.services.inference.ForwardResponse.outputs": {"tf": 1}, "pykos.services.inference.ForwardResponse.error": {"tf": 1.4142135623730951}, "pykos.services.inference.ModelInfo.uid": {"tf": 1}, "pykos.services.inference.ModelInfo.metadata": {"tf": 1}, "pykos.services.inference.ModelInfo.input_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.output_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.description": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.models": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.error": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.MatrixInfo.width": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.height": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.brightness_levels": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.color_capable": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.ImageData.buffer": {"tf": 1}, "pykos.services.led_matrix.ImageData.width": {"tf": 1}, "pykos.services.led_matrix.ImageData.height": {"tf": 1}, "pykos.services.led_matrix.ImageData.format": {"tf": 1}, "pykos.services.led_matrix.ImageData.brightness": {"tf": 1}, "pykos.services.sim.DefaultPosition.qpos": {"tf": 1}, "pykos.services.sim.ResetRequest.initial_state": {"tf": 1}, "pykos.services.sim.ResetRequest.randomize": {"tf": 1}, "pykos.services.sim.StepRequest.num_steps": {"tf": 1}, "pykos.services.sim.StepRequest.step_size": {"tf": 1}, "pykos.services.sim.SimulationParameters.time_scale": {"tf": 1}, "pykos.services.sim.SimulationParameters.gravity": {"tf": 1}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1}, "pykos.services.sound.AudioCapability.sample_rates": {"tf": 1}, "pykos.services.sound.AudioCapability.bit_depths": {"tf": 1}, "pykos.services.sound.AudioCapability.channels": {"tf": 1}, "pykos.services.sound.AudioCapability.available": {"tf": 1}, "pykos.services.sound.AudioInfo.playback": {"tf": 1}, "pykos.services.sound.AudioInfo.recording": {"tf": 1}, "pykos.services.sound.AudioInfo.error": {"tf": 1.4142135623730951}, "pykos.services.sound.AudioConfig.sample_rate": {"tf": 1}, "pykos.services.sound.AudioConfig.bit_depth": {"tf": 1}, "pykos.services.sound.AudioConfig.channels": {"tf": 1}}, "df": 76, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pykos.client.KOS.imu": {"tf": 1}, "pykos.client.KOS.actuator": {"tf": 1}, "pykos.client.KOS.led_matrix": {"tf": 1}, "pykos.client.KOS.sound": {"tf": 1}, "pykos.client.KOS.process_manager": {"tf": 1}, "pykos.client.KOS.inference": {"tf": 1}, "pykos.client.KOS.sim": {"tf": 1}, "pykos.services.inference.ForwardResponse.outputs": {"tf": 1}, "pykos.services.inference.ModelInfo.metadata": {"tf": 1}, "pykos.services.inference.ModelInfo.input_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.output_specs": {"tf": 1}, "pykos.services.sound.AudioInfo.playback": {"tf": 1}, "pykos.services.sound.AudioInfo.recording": {"tf": 1}}, "df": 13}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pykos.client.KOS.process_manager": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.process_manager": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}, "b": {"2": {"docs": {"pykos.services.inference.ForwardResponse.error": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.error": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1}, "pykos.services.sound.AudioInfo.error": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.client.KOS.imu": {"tf": 1}, "pykos.client.KOS.actuator": {"tf": 1}, "pykos.client.KOS.led_matrix": {"tf": 1}, "pykos.client.KOS.sound": {"tf": 1}, "pykos.client.KOS.process_manager": {"tf": 1}, "pykos.client.KOS.inference": {"tf": 1}, "pykos.client.KOS.sim": {"tf": 1}, "pykos.services.inference.Tensor.shape": {"tf": 1}, "pykos.services.inference.ForwardResponse.outputs": {"tf": 1}, "pykos.services.inference.ModelInfo.metadata": {"tf": 1}, "pykos.services.inference.ModelInfo.input_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.output_specs": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.models": {"tf": 1}, "pykos.services.sim.ResetRequest.initial_state": {"tf": 1}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1}, "pykos.services.sound.AudioInfo.playback": {"tf": 1}, "pykos.services.sound.AudioInfo.recording": {"tf": 1}}, "df": 17}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pykos.client.KOS.sound": {"tf": 1}, "pykos.services.sound.AudioInfo.playback": {"tf": 1}, "pykos.services.sound.AudioInfo.recording": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.sound": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"pykos.client.KOS.sim": {"tf": 1}, "pykos.services.sim.ResetRequest.initial_state": {"tf": 1}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.sim": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.actuator.CalibrationMetadata.status": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.status": {"tf": 1}, "pykos.services.inference.TensorDimension.name": {"tf": 1}, "pykos.services.inference.ModelInfo.uid": {"tf": 1}, "pykos.services.inference.ModelInfo.description": {"tf": 1}, "pykos.services.led_matrix.ImageData.format": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {"pykos.client.KOS.imu": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.imu": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pykos.client.KOS.inference": {"tf": 1}, "pykos.services.inference.Tensor.shape": {"tf": 1}, "pykos.services.inference.ForwardResponse.outputs": {"tf": 1}, "pykos.services.inference.ModelInfo.metadata": {"tf": 1}, "pykos.services.inference.ModelInfo.input_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.output_specs": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.models": {"tf": 1}}, "df": 7, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.inference": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {"pykos.services.actuator.ActuatorCommand.actuator_id": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.actuator_id": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.actuator_id": {"tf": 1}, "pykos.services.inference.TensorDimension.size": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.width": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.height": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.brightness_levels": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1}, "pykos.services.led_matrix.ImageData.width": {"tf": 1}, "pykos.services.led_matrix.ImageData.height": {"tf": 1}, "pykos.services.led_matrix.ImageData.brightness": {"tf": 1}, "pykos.services.sim.StepRequest.num_steps": {"tf": 1}, "pykos.services.sound.AudioConfig.sample_rate": {"tf": 1}, "pykos.services.sound.AudioConfig.bit_depth": {"tf": 1}, "pykos.services.sound.AudioConfig.channels": {"tf": 1}}, "df": 15}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.client.KOS.actuator": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.actuator": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.sound.AudioInfo.playback": {"tf": 1}, "pykos.services.sound.AudioInfo.recording": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.client.KOS.led_matrix": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.led_matrix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorStateRequest.actuator_ids": {"tf": 1}, "pykos.services.sound.AudioCapability.sample_rates": {"tf": 1}, "pykos.services.sound.AudioCapability.bit_depths": {"tf": 1}, "pykos.services.sound.AudioCapability.channels": {"tf": 1}}, "df": 4}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.inference.Tensor.values": {"tf": 1}, "pykos.services.sim.DefaultPosition.qpos": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.inference.Tensor.shape": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.models": {"tf": 1}}, "df": 2}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pykos.client.KOS.led_matrix": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.client.KOS.process_manager": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.inference.ModelInfo.metadata": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.inference.GetModelsInfoResponse.models": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorCommand.position": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.velocity": {"tf": 1}, "pykos.services.actuator.ActuatorCommand.torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.kp": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.kd": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.ki": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.max_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protective_torque": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.protection_time": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_angular_error": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_velocity": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_acceleration": {"tf": 1}, "pykos.services.sim.StepRequest.step_size": {"tf": 1}, "pykos.services.sim.SimulationParameters.time_scale": {"tf": 1}, "pykos.services.sim.SimulationParameters.gravity": {"tf": 1}}, "df": 15}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.torque_enabled": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest.zero_position": {"tf": 1}, "pykos.services.sim.ResetRequest.randomize": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"tf": 1}, "pykos.services.imu.ZeroIMURequest.max_retries": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.inference.ModelMetadata.model_name": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_description": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_version": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_author": {"tf": 1}}, "df": 4}}}, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.inference.ForwardResponse.error": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.error": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1}, "pykos.services.sound.AudioInfo.error": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sim.ResetRequest.initial_state": {"tf": 1}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.CalibrationMetadata.actuator_id": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.status": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.status": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_name": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_description": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_version": {"tf": 1}, "pykos.services.inference.ModelMetadata.model_author": {"tf": 1}, "pykos.services.inference.ForwardResponse.error": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.error": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1}, "pykos.services.sound.AudioInfo.error": {"tf": 1}}, "df": 11}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.inference.TensorDimension.dynamic": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.color_capable": {"tf": 1}, "pykos.services.sound.AudioCapability.available": {"tf": 1}}, "df": 3}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.led_matrix.ImageData.buffer": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.inference.ForwardResponse.outputs": {"tf": 1}, "pykos.services.inference.ModelInfo.input_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.output_specs": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.inference.Tensor.shape": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.inference.ForwardResponse.outputs": {"tf": 1}, "pykos.services.inference.ModelInfo.input_specs": {"tf": 1}, "pykos.services.inference.ModelInfo.output_specs": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.sim.ResetRequest.initial_state": {"tf": 1}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.inference.ForwardResponse.error": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.error": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1}, "pykos.services.sound.AudioInfo.error": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.inference.ForwardResponse.error": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse.error": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1}, "pykos.services.sound.AudioInfo.error": {"tf": 1}}, "df": 4}}}}}}}, "default_value": {"root": {"docs": {"pykos.services.actuator.CalibrationStatus.Calibrating": {"tf": 1.4142135623730951}, "pykos.services.actuator.CalibrationStatus.Calibrated": {"tf": 1.4142135623730951}, "pykos.services.actuator.CalibrationStatus.Timeout": {"tf": 1.4142135623730951}, "pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"tf": 1.4142135623730951}, "pykos.services.imu.CalibrationStatus.SUCCEEDED": {"tf": 1.4142135623730951}, "pykos.services.imu.CalibrationStatus.FAILED": {"tf": 1.4142135623730951}}, "df": 6, "x": {"2": {"7": {"docs": {"pykos.services.actuator.CalibrationStatus.Calibrating": {"tf": 1.4142135623730951}, "pykos.services.actuator.CalibrationStatus.Calibrated": {"tf": 1.4142135623730951}, "pykos.services.actuator.CalibrationStatus.Timeout": {"tf": 1.4142135623730951}, "pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"tf": 1.4142135623730951}, "pykos.services.imu.CalibrationStatus.SUCCEEDED": {"tf": 1.4142135623730951}, "pykos.services.imu.CalibrationStatus.FAILED": {"tf": 1.4142135623730951}}, "df": 6}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.actuator.CalibrationStatus.Calibrating": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.actuator.CalibrationStatus.Calibrated": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.CalibrationStatus.Timeout": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.imu.CalibrationStatus.SUCCEEDED": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.imu.CalibrationStatus.FAILED": {"tf": 1}}, "df": 1}}}}}}}}, "signature": {"root": {"0": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 2}, "1": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1}}, "df": 1}, "3": {"9": {"docs": {"pykos.client.KOS.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "5": {"0": {"0": {"5": {"1": {"docs": {"pykos.client.KOS.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pykos.client.KOS.__init__": {"tf": 5.830951894845301}, "pykos.client.KOS.connect": {"tf": 3.4641016151377544}, "pykos.client.KOS.close": {"tf": 3.4641016151377544}, "pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 4.898979485566356}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 5.656854249492381}, "pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 5}, "pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 5.656854249492381}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 5}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 6.855654600401044}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 5.0990195135927845}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 6.782329983125268}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 4.898979485566356}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 5.656854249492381}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 5}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 4.47213595499958}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 4.47213595499958}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 4.47213595499958}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 4.47213595499958}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 6.4031242374328485}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 4.47213595499958}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 5}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 7.874007874011811}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 5.744562646538029}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 5.744562646538029}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 7.0710678118654755}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 8.06225774829855}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 5}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 4.898979485566356}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 5.291502622129181}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 5.0990195135927845}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 5}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 5.291502622129181}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 6.782329983125268}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 5}, "pykos.services.sim.SimServiceClient.reset": {"tf": 5.0990195135927845}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 5.291502622129181}, "pykos.services.sim.SimServiceClient.step": {"tf": 7.0710678118654755}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 5.0990195135927845}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 4.47213595499958}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 5}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 4.898979485566356}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 6.324555320336759}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 6.557438524302}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 4.47213595499958}}, "df": 44, "i": {"docs": {}, "df": 0, "p": {"docs": {"pykos.client.KOS.__init__": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.__init__": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 6}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}}, "df": 2, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "u": {"docs": {"pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}}, "df": 6, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pykos.client.KOS.__init__": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.4142135623730951}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}}, "df": 7}, "e": {"docs": {}, "df": 0, "p": {"docs": {"pykos.services.sim.SimServiceClient.step": {"tf": 1}}, "df": 1, "s": {"docs": {"pykos.services.sim.SimServiceClient.step": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"pykos.client.KOS.connect": {"tf": 1}, "pykos.client.KOS.close": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 34}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 14}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sim.SimServiceClient.step": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.__init__": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}}, "df": 5}}}, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 7}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {"pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}}, "df": 5}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}}, "df": 2}}}}}}, "b": {"2": {"docs": {"pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1.4142135623730951}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 27}, "docs": {}, "df": 0}, "y": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 14}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pykos.client.KOS.connect": {"tf": 1}, "pykos.client.KOS.close": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1.4142135623730951}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1.4142135623730951}, "pykos.services.sim.SimServiceClient.step": {"tf": 1.4142135623730951}}, "df": 9, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"pykos.services.sim.SimServiceClient.step": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}}, "df": 5}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {"pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1.7320508075688772}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1.7320508075688772}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1.7320508075688772}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1.7320508075688772}}, "df": 4}}, "i": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 1}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}}, "df": 7}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1.4142135623730951}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1.4142135623730951}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1.4142135623730951}}, "df": 5, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 10}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 2}}}}}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}}, "df": 5}}}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {"pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 1}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}}, "df": 7}}}, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 7}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 1.7320508075688772}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 1.7320508075688772}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1.7320508075688772}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1.7320508075688772}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 1.7320508075688772}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1.7320508075688772}}, "df": 7}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 11}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 7}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 1}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}}, "df": 7}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 23}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 7}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "x": {"2": {"7": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1.4142135623730951}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1.4142135623730951}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}}, "df": 7}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 1, "s": {"docs": {"pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sim.SimServiceClient.reset": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.actuator.ActuatorCommand": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest": {"tf": 1}, "pykos.services.actuator.ActuatorStateRequest": {"tf": 1}, "pykos.services.imu.ZeroIMURequest": {"tf": 1}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.sim.DefaultPosition": {"tf": 1}, "pykos.services.sim.ResetRequest": {"tf": 1}, "pykos.services.sim.StepRequest": {"tf": 1}, "pykos.services.sim.SimulationParameters": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioInfo": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1}}, "df": 19}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorCommand": {"tf": 1}, "pykos.services.actuator.ConfigureActuatorRequest": {"tf": 1}, "pykos.services.actuator.ActuatorStateRequest": {"tf": 1}, "pykos.services.imu.ZeroIMURequest": {"tf": 1}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.sim.DefaultPosition": {"tf": 1}, "pykos.services.sim.ResetRequest": {"tf": 1}, "pykos.services.sim.StepRequest": {"tf": 1}, "pykos.services.sim.SimulationParameters": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioInfo": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1}}, "df": 19}}}}}}}}}}}, "doc": {"root": {"0": {"1": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}}, "df": 1}, "docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 2}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 2.449489742783178}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 2}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 2.449489742783178}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 2.6457513110645907}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 9}, "1": {"0": {"0": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "6": {"docs": {"pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}}, "df": 4}, "8": {"0": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1.4142135623730951}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 2.23606797749979}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 2}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}}, "df": 11}, "2": {"4": {"docs": {"pykos.services.sound.AudioCapability": {"tf": 1}}, "df": 1}, "5": {"5": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 7}, "3": {"2": {"docs": {"pykos.services.sound.AudioCapability": {"tf": 1}}, "df": 1}, "docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1}}, "df": 1}, "4": {"0": {"9": {"6": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"1": {"0": {"0": {"docs": {"pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"0": {"0": {"0": {"docs": {"pykos.services.sound.AudioCapability": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"0": {"0": {"0": {"docs": {"pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 1}, "5": {"1": {"docs": {"pykos.client.KOS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"1": {"docs": {"pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}}, "df": 1}, "docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}}, "df": 1}, "9": {"0": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}}, "df": 1}, "docs": {"pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}}, "df": 1}, "docs": {"pykos": {"tf": 1.7320508075688772}, "pykos.client": {"tf": 1.7320508075688772}, "pykos.client.KOS": {"tf": 3.4641016151377544}, "pykos.client.KOS.__init__": {"tf": 1.7320508075688772}, "pykos.client.KOS.ip": {"tf": 1.7320508075688772}, "pykos.client.KOS.port": {"tf": 1.7320508075688772}, "pykos.client.KOS.imu": {"tf": 1.7320508075688772}, "pykos.client.KOS.actuator": {"tf": 1.7320508075688772}, "pykos.client.KOS.led_matrix": {"tf": 1.7320508075688772}, "pykos.client.KOS.sound": {"tf": 1.7320508075688772}, "pykos.client.KOS.process_manager": {"tf": 1.7320508075688772}, "pykos.client.KOS.inference": {"tf": 1.7320508075688772}, "pykos.client.KOS.sim": {"tf": 1.7320508075688772}, "pykos.client.KOS.connect": {"tf": 1.7320508075688772}, "pykos.client.KOS.close": {"tf": 1.7320508075688772}, "pykos.services": {"tf": 1.7320508075688772}, "pykos.services.actuator": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorCommand": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorCommand.actuator_id": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorCommand.position": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorCommand.velocity": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorCommand.torque": {"tf": 1.7320508075688772}, "pykos.services.actuator.ConfigureActuatorRequest": {"tf": 1.7320508075688772}, "pykos.services.actuator.ConfigureActuatorRequest.actuator_id": {"tf": 1.7320508075688772}, "pykos.services.actuator.ConfigureActuatorRequest.kp": {"tf": 1.7320508075688772}, "pykos.services.actuator.ConfigureActuatorRequest.kd": {"tf": 1.7320508075688772}, "pykos.services.actuator.ConfigureActuatorRequest.ki": {"tf": 1.7320508075688772}, "pykos.services.actuator.ConfigureActuatorRequest.max_torque": {"tf": 1.7320508075688772}, "pykos.services.actuator.ConfigureActuatorRequest.protective_torque": {"tf": 1.7320508075688772}, "pykos.services.actuator.ConfigureActuatorRequest.protection_time": {"tf": 1.7320508075688772}, "pykos.services.actuator.ConfigureActuatorRequest.torque_enabled": {"tf": 1.7320508075688772}, "pykos.services.actuator.ConfigureActuatorRequest.new_actuator_id": {"tf": 1.7320508075688772}, "pykos.services.actuator.ConfigureActuatorRequest.zero_position": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorStateRequest": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorStateRequest.actuator_ids": {"tf": 1.7320508075688772}, "pykos.services.actuator.CalibrationStatus": {"tf": 1.7320508075688772}, "pykos.services.actuator.CalibrationStatus.Calibrating": {"tf": 1.7320508075688772}, "pykos.services.actuator.CalibrationStatus.Calibrated": {"tf": 1.7320508075688772}, "pykos.services.actuator.CalibrationStatus.Timeout": {"tf": 1.7320508075688772}, "pykos.services.actuator.CalibrationMetadata": {"tf": 1.7320508075688772}, "pykos.services.actuator.CalibrationMetadata.__init__": {"tf": 1.7320508075688772}, "pykos.services.actuator.CalibrationMetadata.actuator_id": {"tf": 1.7320508075688772}, "pykos.services.actuator.CalibrationMetadata.status": {"tf": 1.7320508075688772}, "pykos.services.actuator.CalibrationMetadata.decode_metadata": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorServiceClient": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorServiceClient.__init__": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorServiceClient.stub": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorServiceClient.operations_stub": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorServiceClient.get_calibration_status": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 6}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 5.477225575051661}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 5}, "pykos.services.imu": {"tf": 1.7320508075688772}, "pykos.services.imu.ZeroIMURequest": {"tf": 1.7320508075688772}, "pykos.services.imu.ZeroIMURequest.max_retries": {"tf": 1.7320508075688772}, "pykos.services.imu.ZeroIMURequest.max_angular_error": {"tf": 1.7320508075688772}, "pykos.services.imu.ZeroIMURequest.max_velocity": {"tf": 1.7320508075688772}, "pykos.services.imu.ZeroIMURequest.max_acceleration": {"tf": 1.7320508075688772}, "pykos.services.imu.CalibrationStatus": {"tf": 1.7320508075688772}, "pykos.services.imu.CalibrationStatus.IN_PROGRESS": {"tf": 1.7320508075688772}, "pykos.services.imu.CalibrationStatus.SUCCEEDED": {"tf": 1.7320508075688772}, "pykos.services.imu.CalibrationStatus.FAILED": {"tf": 1.7320508075688772}, "pykos.services.imu.CalibrationMetadata": {"tf": 1.7320508075688772}, "pykos.services.imu.CalibrationMetadata.__init__": {"tf": 1.7320508075688772}, "pykos.services.imu.CalibrationMetadata.status": {"tf": 1.7320508075688772}, "pykos.services.imu.CalibrationMetadata.decode_metadata": {"tf": 1.7320508075688772}, "pykos.services.imu.IMUServiceClient": {"tf": 1.7320508075688772}, "pykos.services.imu.IMUServiceClient.__init__": {"tf": 1.7320508075688772}, "pykos.services.imu.IMUServiceClient.stub": {"tf": 1.7320508075688772}, "pykos.services.imu.IMUServiceClient.operations_stub": {"tf": 1.7320508075688772}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 2.449489742783178}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 2.449489742783178}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 2.449489742783178}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 2.449489742783178}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 5}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 3}, "pykos.services.inference": {"tf": 1.7320508075688772}, "pykos.services.inference.ModelMetadata": {"tf": 2.449489742783178}, "pykos.services.inference.ModelMetadata.model_name": {"tf": 1.7320508075688772}, "pykos.services.inference.ModelMetadata.model_description": {"tf": 1.7320508075688772}, "pykos.services.inference.ModelMetadata.model_version": {"tf": 1.7320508075688772}, "pykos.services.inference.ModelMetadata.model_author": {"tf": 1.7320508075688772}, "pykos.services.inference.TensorDimension": {"tf": 2.449489742783178}, "pykos.services.inference.TensorDimension.size": {"tf": 1.7320508075688772}, "pykos.services.inference.TensorDimension.name": {"tf": 1.7320508075688772}, "pykos.services.inference.TensorDimension.dynamic": {"tf": 1.7320508075688772}, "pykos.services.inference.Tensor": {"tf": 2.23606797749979}, "pykos.services.inference.Tensor.values": {"tf": 1.7320508075688772}, "pykos.services.inference.Tensor.shape": {"tf": 1.7320508075688772}, "pykos.services.inference.ForwardResponse": {"tf": 2.23606797749979}, "pykos.services.inference.ForwardResponse.outputs": {"tf": 1.7320508075688772}, "pykos.services.inference.ForwardResponse.error": {"tf": 1.7320508075688772}, "pykos.services.inference.ModelInfo": {"tf": 2.23606797749979}, "pykos.services.inference.ModelInfo.uid": {"tf": 1.7320508075688772}, "pykos.services.inference.ModelInfo.metadata": {"tf": 1.7320508075688772}, "pykos.services.inference.ModelInfo.input_specs": {"tf": 1.7320508075688772}, "pykos.services.inference.ModelInfo.output_specs": {"tf": 1.7320508075688772}, "pykos.services.inference.ModelInfo.description": {"tf": 1.7320508075688772}, "pykos.services.inference.GetModelsInfoResponse": {"tf": 1.7320508075688772}, "pykos.services.inference.GetModelsInfoResponse.models": {"tf": 1.7320508075688772}, "pykos.services.inference.GetModelsInfoResponse.error": {"tf": 1.7320508075688772}, "pykos.services.inference.InferenceServiceClient": {"tf": 2.449489742783178}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 2.449489742783178}, "pykos.services.inference.InferenceServiceClient.stub": {"tf": 1.7320508075688772}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 10.344080432788601}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 3}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 3}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 2.8284271247461903}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 2.8284271247461903}, "pykos.services.led_matrix": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.MatrixInfo": {"tf": 2.23606797749979}, "pykos.services.led_matrix.MatrixInfo.width": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.MatrixInfo.height": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.MatrixInfo.brightness_levels": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.MatrixInfo.color_capable": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.MatrixInfo.bits_per_pixel": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.MatrixInfo.error": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.ImageData": {"tf": 2.449489742783178}, "pykos.services.led_matrix.ImageData.buffer": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.ImageData.width": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.ImageData.height": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.ImageData.format": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.ImageData.brightness": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 2.449489742783178}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 2.449489742783178}, "pykos.services.led_matrix.LEDMatrixServiceClient.stub": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 2.23606797749979}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 3.605551275463989}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 3}, "pykos.services.process_manager": {"tf": 1.7320508075688772}, "pykos.services.process_manager.ProcessManagerServiceClient": {"tf": 1.7320508075688772}, "pykos.services.process_manager.ProcessManagerServiceClient.__init__": {"tf": 1.7320508075688772}, "pykos.services.process_manager.ProcessManagerServiceClient.stub": {"tf": 1.7320508075688772}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 2.8284271247461903}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 2.449489742783178}, "pykos.services.sim": {"tf": 1.7320508075688772}, "pykos.services.sim.DefaultPosition": {"tf": 1.7320508075688772}, "pykos.services.sim.DefaultPosition.qpos": {"tf": 1.7320508075688772}, "pykos.services.sim.ResetRequest": {"tf": 1.7320508075688772}, "pykos.services.sim.ResetRequest.initial_state": {"tf": 1.7320508075688772}, "pykos.services.sim.ResetRequest.randomize": {"tf": 1.7320508075688772}, "pykos.services.sim.StepRequest": {"tf": 1.7320508075688772}, "pykos.services.sim.StepRequest.num_steps": {"tf": 1.7320508075688772}, "pykos.services.sim.StepRequest.step_size": {"tf": 1.7320508075688772}, "pykos.services.sim.SimulationParameters": {"tf": 1.7320508075688772}, "pykos.services.sim.SimulationParameters.time_scale": {"tf": 1.7320508075688772}, "pykos.services.sim.SimulationParameters.gravity": {"tf": 1.7320508075688772}, "pykos.services.sim.SimulationParameters.initial_state": {"tf": 1.7320508075688772}, "pykos.services.sim.SimServiceClient": {"tf": 1.7320508075688772}, "pykos.services.sim.SimServiceClient.__init__": {"tf": 1.7320508075688772}, "pykos.services.sim.SimServiceClient.stub": {"tf": 1.7320508075688772}, "pykos.services.sim.SimServiceClient.reset": {"tf": 5.0990195135927845}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 2.6457513110645907}, "pykos.services.sim.SimServiceClient.step": {"tf": 2.6457513110645907}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 9.848857801796104}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 2.23606797749979}, "pykos.services.sound": {"tf": 1.7320508075688772}, "pykos.services.sound.AudioCapability": {"tf": 2.23606797749979}, "pykos.services.sound.AudioCapability.sample_rates": {"tf": 1.7320508075688772}, "pykos.services.sound.AudioCapability.bit_depths": {"tf": 1.7320508075688772}, "pykos.services.sound.AudioCapability.channels": {"tf": 1.7320508075688772}, "pykos.services.sound.AudioCapability.available": {"tf": 1.7320508075688772}, "pykos.services.sound.AudioInfo": {"tf": 2.23606797749979}, "pykos.services.sound.AudioInfo.playback": {"tf": 1.7320508075688772}, "pykos.services.sound.AudioInfo.recording": {"tf": 1.7320508075688772}, "pykos.services.sound.AudioInfo.error": {"tf": 1.7320508075688772}, "pykos.services.sound.AudioConfig": {"tf": 2.449489742783178}, "pykos.services.sound.AudioConfig.sample_rate": {"tf": 1.7320508075688772}, "pykos.services.sound.AudioConfig.bit_depth": {"tf": 1.7320508075688772}, "pykos.services.sound.AudioConfig.channels": {"tf": 1.7320508075688772}, "pykos.services.sound.SoundServiceClient": {"tf": 2.449489742783178}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 2.449489742783178}, "pykos.services.sound.SoundServiceClient.stub": {"tf": 1.7320508075688772}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 2.449489742783178}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 5.385164807134504}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 5.196152422706632}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 2.449489742783178}}, "df": 178, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pykos": {"tf": 1}, "pykos.client": {"tf": 1}, "pykos.client.KOS": {"tf": 1.7320508075688772}}, "df": 3}}, "p": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.7320508075688772}}, "df": 1}, "d": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.7320508075688772}}, "df": 1}, "i": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.4142135623730951}}, "df": 1}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 7}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1.4142135623730951}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1.7320508075688772}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1.4142135623730951}, "pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 8}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sim.SimServiceClient.set_paused": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.ModelMetadata": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.process_manager": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 4, "s": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.ImageData": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pykos.services.sound.AudioInfo": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.sound.SoundServiceClient": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "m": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos": {"tf": 1}, "pykos.client": {"tf": 1}, "pykos.client.KOS": {"tf": 1.4142135623730951}, "pykos.services.actuator": {"tf": 1}, "pykos.services.imu": {"tf": 1}, "pykos.services.inference": {"tf": 1}, "pykos.services.inference.InferenceServiceClient": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.led_matrix": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager": {"tf": 1}, "pykos.services.sim": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound": {"tf": 1}, "pykos.services.sound.SoundServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 21, "s": {"docs": {"pykos.client.KOS.connect": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.client.KOS.close": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS.connect": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}}, "df": 13}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}}, "df": 2, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 2}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 4}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sound.AudioCapability": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pykos.client.KOS.close": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1.4142135623730951}, "pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.7320508075688772}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.7320508075688772}}, "df": 5}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.7320508075688772}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1.7320508075688772}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "n": {"docs": {"pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}}, "df": 4}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioInfo": {"tf": 1.7320508075688772}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1.4142135623730951}}, "df": 4}}}, "y": {"docs": {"pykos.services.sound.AudioCapability": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "a": {"docs": {"pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 6, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pykos.client.KOS": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioInfo": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 31}}, "e": {"docs": {"pykos.services.inference.ModelMetadata": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pykos.client.KOS": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.ModelMetadata": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.client.KOS": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {"pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 4, "d": {"docs": {"pykos.client.KOS.connect": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1.4142135623730951}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.InferenceServiceClient": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}}, "df": 10}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "y": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.calibrate": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 2}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 3}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1.4142135623730951}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1.7320508075688772}}, "df": 2, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 11}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.inference.InferenceServiceClient": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient": {"tf": 1}}, "df": 3}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioInfo": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}}, "df": 13}}}}, "s": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.ModelInfo": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.GetModelsInfoResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1.7320508075688772}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioInfo": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.SoundServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 2.449489742783178}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 2}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 2}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"pykos.client.KOS": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.ImageData": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1.4142135623730951}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.7320508075688772}}, "df": 10, "t": {"docs": {"pykos.client.KOS": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.sim.SimServiceClient.reset": {"tf": 2}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pykos.client.KOS.connect": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}}, "df": 4}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 11}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}, "pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.AudioInfo": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}}, "df": 16}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference": {"tf": 1}, "pykos.services.inference.ForwardResponse": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.7320508075688772}}, "df": 6, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.InferenceServiceClient": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.inference.ModelInfo": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {"pykos.client.KOS": {"tf": 1.4142135623730951}, "pykos.services.imu": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}}, "df": 6, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 2}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 2.23606797749979}}, "df": 2}}}}, "d": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 2.449489742783178}}, "df": 2, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1.4142135623730951}}, "df": 1}}, "f": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sim.SimServiceClient.reset": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "s": {"docs": {"pykos.services.sound.AudioCapability": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "r": {"docs": {"pykos.client.KOS": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 2}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 2}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}}, "df": 1, "s": {"docs": {"pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1.4142135623730951}}, "df": 2}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"pykos.services.sim.SimServiceClient.step": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"pykos.services.sim.SimServiceClient.step": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pykos.client.KOS": {"tf": 1}, "pykos.client.KOS.connect": {"tf": 1}, "pykos.services.actuator": {"tf": 1}, "pykos.services.imu": {"tf": 1}, "pykos.services.inference": {"tf": 1}, "pykos.services.inference.InferenceServiceClient": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager": {"tf": 1}, "pykos.services.sim": {"tf": 1}, "pykos.services.sound": {"tf": 1}, "pykos.services.sound.SoundServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}}, "df": 15}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.client.KOS.connect": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.Tensor": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 11}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1.7320508075688772}}, "df": 3}}, "s": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.TensorDimension": {"tf": 1.7320508075688772}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}}, "df": 2}}, "m": {"docs": {"pykos.services.sim": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1.4142135623730951}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1.4142135623730951}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}}, "df": 5}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.inference.ModelInfo": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2, "s": {"docs": {"pykos.services.inference.ModelInfo": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1, "s": {"docs": {"pykos.services.sound.SoundServiceClient": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1.7320508075688772}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.sound": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sound.SoundServiceClient": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sound.AudioCapability": {"tf": 1.4142135623730951}, "pykos.services.sound.AudioConfig": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.7320508075688772}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.7320508075688772}}, "df": 4}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pykos.services.sound.AudioInfo": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pykos.client.KOS": {"tf": 1.4142135623730951}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sound.AudioInfo": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1.7320508075688772}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 7}}}}}}, "n": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 2}}}, "f": {"docs": {"pykos.client.KOS": {"tf": 1.4142135623730951}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1.4142135623730951}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 2}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.TensorDimension": {"tf": 1.4142135623730951}, "pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 2}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1.7320508075688772}, "pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.7320508075688772}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 22}, "n": {"docs": {"pykos.services.inference.InferenceServiceClient": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}}, "df": 1}}, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1.4142135623730951}}, "df": 2}}}}, "e": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {"pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.inference.Tensor": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 3, "s": {"docs": {"pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"pykos.client.KOS": {"tf": 1.7320508075688772}, "pykos.client.KOS.connect": {"tf": 1}, "pykos.client.KOS.close": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1.7320508075688772}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1.7320508075688772}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.InferenceServiceClient": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 2.8284271247461903}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1.7320508075688772}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 2}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1.4142135623730951}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1.4142135623730951}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sound.SoundServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 35, "m": {"docs": {"pykos.services.inference.InferenceServiceClient": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference.TensorDimension": {"tf": 1.7320508075688772}, "pykos.services.inference.InferenceServiceClient": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1}, "pykos.services.sound.SoundServiceClient": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"pykos.services.sound.SoundServiceClient": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {"pykos.client.KOS": {"tf": 1.4142135623730951}, "pykos.client.KOS.connect": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.ImageData": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 2}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1.4142135623730951}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 23, "r": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1.4142135623730951}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 2.6457513110645907}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.4142135623730951}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1.7320508075688772}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.7320508075688772}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.inference.Tensor": {"tf": 1.4142135623730951}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sim.SimServiceClient.step": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}}, "df": 4}}}, "w": {"docs": {"pykos.services.inference.Tensor": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.client.KOS": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 27}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sim.SimServiceClient.reset": {"tf": 2}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}}, "df": 2, "s": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}, "pykos.services.sound.AudioInfo": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.stop_recording": {"tf": 1}}, "df": 7}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "w": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 4}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sim.SimServiceClient.reset": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sound.AudioConfig": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.7320508075688772}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"pykos.services.sound.AudioCapability": {"tf": 1.4142135623730951}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "b": {"5": {"6": {"5": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"8": {"8": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "b": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}}, "df": 1, "s": {"docs": {"pykos.client.KOS": {"tf": 1.4142135623730951}}, "df": 1}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.sim.SimServiceClient.reset": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.inference.ModelInfo": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pykos.services.sound.AudioConfig": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.7320508075688772}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"pykos.services.sound.AudioCapability": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.inference.TensorDimension": {"tf": 2}, "pykos.services.inference.Tensor": {"tf": 1}}, "df": 2, "s": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1.7320508075688772}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pykos.services.inference.TensorDimension": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.ImageData": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1.7320508075688772}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.client.KOS": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1.4142135623730951}}, "df": 1, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1.4142135623730951}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1.4142135623730951}, "pykos.services.inference.Tensor": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1.4142135623730951}, "pykos.services.sound.AudioCapability": {"tf": 1.7320508075688772}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.led_matrix": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 8, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2, "s": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "f": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.client.KOS": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.InferenceServiceClient": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 2}}, "df": 18, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.sim.SimServiceClient.step": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.start_kclip": {"tf": 1}, "pykos.services.process_manager.ProcessManagerServiceClient.stop_kclip": {"tf": 1}, "pykos.services.sound.SoundServiceClient": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 8}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.inference.ModelMetadata": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sim.SimServiceClient.set_paused": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {"pykos.services.inference.TensorDimension": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1.7320508075688772}, "pykos.services.sound.AudioConfig": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}}, "df": 7, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {"pykos.client.KOS.connect": {"tf": 1}, "pykos.client.KOS.close": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.7320508075688772}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1.7320508075688772}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1.7320508075688772}}, "df": 3}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}, "pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}, "pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.get_audio_info": {"tf": 1}}, "df": 10, "s": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 2.8284271247461903}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 2}}, "df": 1}}}}}, "y": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}}, "df": 4}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.inference.Tensor": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pykos.services.led_matrix": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.process_manager": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}}, "df": 1}}}}}}, "o": {"8": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2}, "docs": {"pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 3}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.inference.ModelMetadata": {"tf": 1.4142135623730951}, "pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1.7320508075688772}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 4.47213595499958}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.GetModelsInfoResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1.7320508075688772}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.ModelInfo": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 1, "s": {"docs": {"pykos.services.sound.SoundServiceClient": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {"pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {"pykos.services.inference.TensorDimension": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1.7320508075688772}, "pykos.services.sound.AudioConfig": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.4142135623730951}}, "df": 7, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 9}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.ModelInfo": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.imu.IMUServiceClient.get_euler_angles": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1.7320508075688772}, "pykos.services.inference.ForwardResponse": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}, "pykos.services.sim.SimServiceClient.get_parameters": {"tf": 1}, "pykos.services.sound.AudioInfo": {"tf": 1.4142135623730951}}, "df": 9}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.imu.IMUServiceClient.get_imu_values": {"tf": 1.4142135623730951}, "pykos.services.imu.IMUServiceClient.get_imu_advanced_values": {"tf": 1.4142135623730951}, "pykos.services.inference.Tensor": {"tf": 1.4142135623730951}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.inference.TensorDimension": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.command_actuators": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.ImageData": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "z": {"docs": {"pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.7320508075688772}, "pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"pykos.services.sim.SimServiceClient.step": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}, "pykos.services.sim.SimServiceClient.step": {"tf": 1}, "pykos.services.sound.AudioConfig": {"tf": 1}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 7}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.TensorDimension": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"pykos.services.inference.ForwardResponse": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"pykos.services.actuator.ActuatorServiceClient.configure_actuator": {"tf": 1}, "pykos.services.imu.IMUServiceClient.zero": {"tf": 1.7320508075688772}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.imu.IMUServiceClient.zero": {"tf": 2.23606797749979}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.actuator.ActuatorServiceClient.get_actuators_state": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.imu.IMUServiceClient.get_quaternion": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 4}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1.4142135623730951}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sim.SimServiceClient.set_parameters": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pykos.services.inference.TensorDimension": {"tf": 1.4142135623730951}}, "df": 1}}}}, "y": {"docs": {"pykos.services.inference.ModelInfo": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1.4142135623730951}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1.4142135623730951}}, "df": 3}}}}, "t": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1.4142135623730951}, "pykos.services.sound.AudioConfig": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1.7320508075688772}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1.7320508075688772}}, "df": 5, "s": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.ImageData": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1.7320508075688772}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 3}}}}}, "g": {"docs": {}, "df": 0, "r": {"8": {"8": {"8": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.imu.IMUServiceClient.calibrate": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"pykos.services.inference.InferenceServiceClient.__init__": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.__init__": {"tf": 1}, "pykos.services.sound.SoundServiceClient.__init__": {"tf": 1}}, "df": 4, "d": {"docs": {"pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.inference.ModelMetadata": {"tf": 1}, "pykos.services.inference.InferenceServiceClient": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.ModelInfo": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}, "pykos.services.inference.InferenceServiceClient.forward": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"pykos.services.inference.InferenceServiceClient.load_models": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1.4142135623730951}, "pykos.services.inference.InferenceServiceClient.get_models_info": {"tf": 1.4142135623730951}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.inference.InferenceServiceClient.unload_models": {"tf": 1.7320508075688772}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sim.SimServiceClient.set_paused": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pykos.services.inference.TensorDimension": {"tf": 1}, "pykos.services.led_matrix.MatrixInfo": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1}, "pykos.services.sim.SimServiceClient.reset": {"tf": 1}, "pykos.services.sound.AudioCapability": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pykos.services.led_matrix.MatrixInfo": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.ImageData": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.get_matrix_info": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1.4142135623730951}}, "df": 5}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.led_matrix.ImageData": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pykos.services.led_matrix.LEDMatrixServiceClient.write_buffer": {"tf": 1.4142135623730951}, "pykos.services.led_matrix.LEDMatrixServiceClient.write_color_buffer": {"tf": 1.4142135623730951}, "pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {"pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 1}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {"pykos.services.inference.InferenceServiceClient.upload_model": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pykos.services.sound.SoundServiceClient.play_audio": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"pykos.services.sound.SoundServiceClient.record_audio": {"tf": 1}}, "df": 1}}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();